{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useCallback,useRef,useState}from'react';import inRange from'lodash/inRange';import times from'lodash/times';import debounce from'lodash/debounce';import constants from\"../commons/constants\";import{generateDay}from\"../dateutils\";var PAGES_COUNT=100;export var NEAR_EDGE_THRESHOLD=10;export var INITIAL_PAGE=Math.floor(PAGES_COUNT/2);var UseTimelinePages=function UseTimelinePages(_ref){var date=_ref.date,listRef=_ref.listRef;var pagesRef=useRef(times(PAGES_COUNT,function(i){return generateDay(date,i-Math.floor(PAGES_COUNT/2));}));var _useState=useState(pagesRef.current),_useState2=_slicedToArray(_useState,2),pages=_useState2[0],setPages=_useState2[1];var shouldResetPages=useRef(false);var isOutOfRange=useCallback(function(index){return!inRange(index,0,PAGES_COUNT);},[]);var isNearEdges=useCallback(function(index){return!inRange(index,NEAR_EDGE_THRESHOLD,PAGES_COUNT-NEAR_EDGE_THRESHOLD);},[]);var isOnEdgePages=useCallback(function(index){return!inRange(index,1,PAGES_COUNT-1);},[]);var scrollToPage=function scrollToPage(pageIndex){var _listRef$current;(_listRef$current=listRef.current)==null?void 0:_listRef$current.scrollToOffset(pageIndex*constants.screenWidth,0,false);};var resetPages=function resetPages(date){pagesRef.current=times(PAGES_COUNT,function(i){return generateDay(date,i-Math.floor(PAGES_COUNT/2));});setPages(pagesRef.current);setTimeout(function(){scrollToPage(INITIAL_PAGE);shouldResetPages.current=false;},0);};return{resetPages:useCallback(resetPages,[]),resetPagesDebounce:useCallback(debounce(resetPages,500,{leading:false,trailing:true}),[]),scrollToPage:useCallback(scrollToPage,[]),scrollToPageDebounce:useCallback(debounce(scrollToPage,250,{leading:false,trailing:true}),[]),pagesRef:pagesRef,pages:pages,shouldResetPages:shouldResetPages,isOutOfRange:isOutOfRange,isNearEdges:isNearEdges,isOnEdgePages:isOnEdgePages};};export default UseTimelinePages;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/timeline-list/useTimelinePages.js"],"names":["useCallback","useRef","useState","inRange","times","debounce","constants","generateDay","PAGES_COUNT","NEAR_EDGE_THRESHOLD","INITIAL_PAGE","Math","floor","UseTimelinePages","date","listRef","pagesRef","i","current","pages","setPages","shouldResetPages","isOutOfRange","index","isNearEdges","isOnEdgePages","scrollToPage","pageIndex","scrollToOffset","screenWidth","resetPages","setTimeout","resetPagesDebounce","leading","trailing","scrollToPageDebounce"],"mappings":"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","sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport inRange from 'lodash/inRange';\nimport times from 'lodash/times';\nimport debounce from 'lodash/debounce';\nimport constants from '../commons/constants';\nimport { generateDay } from '../dateutils';\nconst PAGES_COUNT = 100;\nexport const NEAR_EDGE_THRESHOLD = 10;\nexport const INITIAL_PAGE = Math.floor(PAGES_COUNT / 2);\nconst UseTimelinePages = ({ date, listRef }) => {\n    const pagesRef = useRef(times(PAGES_COUNT, i => generateDay(date, i - Math.floor(PAGES_COUNT / 2))));\n    const [pages, setPages] = useState(pagesRef.current);\n    const shouldResetPages = useRef(false);\n    const isOutOfRange = useCallback((index) => {\n        return !inRange(index, 0, PAGES_COUNT);\n    }, []);\n    const isNearEdges = useCallback(index => {\n        return !inRange(index, NEAR_EDGE_THRESHOLD, PAGES_COUNT - NEAR_EDGE_THRESHOLD);\n    }, []);\n    const isOnEdgePages = useCallback(index => {\n        return !inRange(index, 1, PAGES_COUNT - 1);\n    }, []);\n    const scrollToPage = (pageIndex) => {\n        listRef.current?.scrollToOffset(pageIndex * constants.screenWidth, 0, false);\n    };\n    const resetPages = (date) => {\n        pagesRef.current = times(PAGES_COUNT, i => generateDay(date, i - Math.floor(PAGES_COUNT / 2)));\n        setPages(pagesRef.current);\n        setTimeout(() => {\n            scrollToPage(INITIAL_PAGE);\n            shouldResetPages.current = false;\n        }, 0);\n    };\n    return {\n        resetPages: useCallback(resetPages, []),\n        resetPagesDebounce: useCallback(debounce(resetPages, 500, { leading: false, trailing: true }), []),\n        scrollToPage: useCallback(scrollToPage, []),\n        scrollToPageDebounce: useCallback(debounce(scrollToPage, 250, { leading: false, trailing: true }), []),\n        pagesRef,\n        pages,\n        shouldResetPages,\n        isOutOfRange,\n        isNearEdges,\n        isOnEdgePages\n    };\n};\nexport default UseTimelinePages;\n"]},"metadata":{},"sourceType":"module"}