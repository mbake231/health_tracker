{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import{Calendar,CalendarList,Agenda}from'react-native-calendars';import Drawer from\"react-bottom-drawer\";import axios from'axios';import Alert from\"react-native-web/dist/exports/Alert\";import Modal from\"react-native-web/dist/exports/Modal\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import Pressable from\"react-native-web/dist/exports/Pressable\";import View from\"react-native-web/dist/exports/View\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function WorkoutCalendar(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),workOut=_useState2[0],setWorkOut=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalVisible=_useState4[0],setModalVisible=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];function getDayData(d){var ctr=0;while(ctr<props.workout_data.length){if(props.workout_data[ctr].date===d.dateString){return props.workout_data[ctr].activity_data.workOut;}ctr++;}return'empty';}function submitNewEatingData(){var json={activity_type:\"workout\",date:date,activity_data:{workOut:workOut}};var url;if(process.env.NODE_ENV=='production')url='https://health-track-949.herokuapp.com';else url='http://localhost:3000';console.log(JSON.stringify(json));axios.post(url+'/Activity/edit',json,{withCredentials:true},{headers:{'Content-Type':'application/json'}}).then(setTimeout(function(){props.updateData();},500));setModalVisible(false);}function handleClickDay(d){setModalVisible(true);setDate(d.dateString);}var styles=StyleSheet.create({centeredView:{flex:1,justifyContent:\"center\",alignItems:\"center\",marginTop:22},modalView:{margin:20,backgroundColor:\"white\",borderRadius:20,padding:35,alignItems:\"center\",shadowColor:\"#000\",shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:4,elevation:5},button:{borderRadius:20,padding:10,elevation:2},buttonOpen:{backgroundColor:\"#F194FF\"},buttonClose:{backgroundColor:\"#2196F3\"},textStyle:{color:\"white\",fontWeight:\"bold\",textAlign:\"center\"},modalText:{marginBottom:15,textAlign:\"center\"}});return _jsxs(\"div\",{children:[_jsx(CalendarList,{style:{height:'600px'},dayComponent:function dayComponent(_ref){var date=_ref.date,state=_ref.state;return _jsx(\"div\",{onClick:function onClick(){handleClickDay(date);},style:{textAlign:'center'},children:getDayData(date)});},theme:{backgroundColor:'#ccc','stylesheet.calendar.main':{dayContainer:{borderBottomWidth:'2px',borderBottomColor:'black',borderTopWidth:'2px',borderTopColor:'black',borderLeftWidth:'1px',borderLeftColor:'black',borderRightWidth:'1px',borderRightColor:'black',flex:1,alignItems:'center',height:'60px'}}},onVisibleMonthsChange:function onVisibleMonthsChange(months){console.log('now these months are visible',months);},pastScrollRange:3,futureScrollRange:2,scrollEnabled:true,showScrollIndicator:true}),_jsx(Modal,{animationType:\"slide\",transparent:true,visible:modalVisible,onRequestClose:function onRequestClose(){Alert.alert(\"Modal has been closed.\");setModalVisible(!modalVisible);},children:_jsx(View,{style:styles.centeredView,children:_jsxs(View,{style:styles.modalView,children:[_jsxs(\"form\",{onChange:function onChange(e){return setWorkOut(e.target.value);},children:[_jsx(\"div\",{children:\"Followed diet?\"}),_jsx(\"input\",{type:\"radio\",value:\"cardio\",name:\"followedDiet\"}),\" Cardio\",_jsx(\"input\",{type:\"radio\",value:\"strength\",name:\"followedDiet\"}),\" Strength\"]}),_jsx(Pressable,{style:[styles.button,styles.buttonClose],onPress:function onPress(){return submitNewEatingData();},children:_jsx(Text,{style:styles.textStyle,children:\"Save\"})})]})})})]});}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/components/WorkoutCalendar.jsx"],"names":["React","useState","Calendar","CalendarList","Agenda","Drawer","axios","WorkoutCalendar","props","workOut","setWorkOut","modalVisible","setModalVisible","date","setDate","getDayData","d","ctr","workout_data","length","dateString","activity_data","submitNewEatingData","json","activity_type","url","process","env","NODE_ENV","console","log","JSON","stringify","post","withCredentials","headers","then","setTimeout","updateData","handleClickDay","styles","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom","state","dayContainer","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","borderLeftWidth","borderLeftColor","borderRightWidth","borderRightColor","months","Alert","alert","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\nimport Drawer from \"react-bottom-drawer\";\nimport axios from 'axios';\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\n\nexport default function WorkoutCalendar(props) {\n\n  const [workOut, setWorkOut] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [date, setDate] = useState(false);\n\n  function getDayData(d) {   \n  var ctr = 0;\n  while (ctr<props.workout_data.length){\n    if(props.workout_data[ctr].date===d.dateString){\n      return props.workout_data[ctr].activity_data.workOut;\n    }\n    ctr++;\n  }\n  return 'empty';\n}\n\nfunction submitNewEatingData(){\n\n // console.log(drinkValue+' '+date);\n\n  var json = ({\n    activity_type : \"workout\",\n    date : date,\n    activity_data : {\n        workOut : workOut\n    }\n    });\n    var url;\n        if(process.env.NODE_ENV=='production')\n            url='https://health-track-949.herokuapp.com';\n        else\n            url='http://localhost:3000'\nconsole.log(JSON.stringify(json))\n  axios.post(url+'/Activity/edit', json,{ withCredentials: true },{\n        headers: {'Content-Type': 'application/json'}})\n      .then(\n        setTimeout(() => {\n          props.updateData()\n       }, 500)\n\n        \n        );\n        setModalVisible(false);\n  \n}\n\n\nfunction handleClickDay(d){\n\n    setModalVisible(true);\n  setDate(d.dateString);\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 22\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: \"white\",\n      borderRadius: 20,\n      padding: 35,\n      alignItems: \"center\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n      elevation: 5\n    },\n    button: {\n      borderRadius: 20,\n      padding: 10,\n      elevation: 2\n    },\n    buttonOpen: {\n      backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n      backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n      color: \"white\",\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    modalText: {\n      marginBottom: 15,\n      textAlign: \"center\"\n    }\n  });\n\n\n      return (\n        <div>\n        <CalendarList\n      style={{height:'600px'}}\n        dayComponent={({date, state}) => {\n          return (\n           \n              <div onClick={() => {handleClickDay(date)}} style={{textAlign: 'center'}}>{getDayData(date)}</div>\n           \n          );\n        }}\n\n  theme={{\n    backgroundColor: '#ccc',\n    'stylesheet.calendar.main': {\n      dayContainer: {\n        borderBottomWidth:'2px',\n        borderBottomColor:'black',\n        borderTopWidth:'2px',\n        borderTopColor:'black',\n        borderLeftWidth:'1px',\n        borderLeftColor:'black',\n        borderRightWidth:'1px',\n        borderRightColor:'black',\n        flex: 1,\n        alignItems: 'center',\n        height:'60px'\n      \n      }\n    }\n  }}\n\n       \n         // Callback which gets executed when visible months change in scroll view. Default = undefined\n   onVisibleMonthsChange={(months) => {console.log('now these months are visible', months);}}\n   // Max amount of months allowed to scroll to the past. Default = 50\n   pastScrollRange={3}\n   // Max amount of months allowed to scroll to the future. Default = 50\n   futureScrollRange={2}\n   // Enable or disable scrolling of calendar list\n   scrollEnabled={true}\n   // Enable or disable vertical scroll indicator. Default = false\n   showScrollIndicator={true}\n  \n />\n\n\n\n            <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n          <form onChange={e=>setWorkOut(e.target.value)}>\n              <div>Followed diet?</div>\n                <input type=\"radio\" value=\"cardio\" name=\"followedDiet\"/> Cardio\n                <input type=\"radio\" value=\"strength\" name=\"followedDiet\"/> Strength\n            </form>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => submitNewEatingData()}\n            >\n              <Text style={styles.textStyle}>Save</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n            </div>\n          )\n      }\n\n\n"]},"metadata":{},"sourceType":"module"}