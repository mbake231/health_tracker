{"ast":null,"code":"import XDate from'xdate';import values from'lodash/values';import PropTypes from'prop-types';import React,{Fragment,useCallback,useRef}from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{xdateToData}from\"../../../interface\";import styleConstructor from\"./style\";import Marking from\"../marking\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BasicDay=function BasicDay(props){var theme=props.theme,date=props.date,onPress=props.onPress,onLongPress=props.onLongPress,markingType=props.markingType,marking=props.marking,state=props.state,disableAllTouchEventsForDisabledDays=props.disableAllTouchEventsForDisabledDays,disableAllTouchEventsForInactiveDays=props.disableAllTouchEventsForInactiveDays,accessibilityLabel=props.accessibilityLabel,children=props.children,testID=props.testID;var style=useRef(styleConstructor(theme));var _marking=marking||{};var isSelected=_marking.selected||state==='selected';var isDisabled=typeof _marking.disabled!=='undefined'?_marking.disabled:state==='disabled';var isInactive=_marking==null?void 0:_marking.inactive;var isToday=state==='today';var isMultiDot=markingType===Marking.markings.MULTI_DOT;var isMultiPeriod=markingType===Marking.markings.MULTI_PERIOD;var isCustom=markingType===Marking.markings.CUSTOM;var dateData=date?xdateToData(new XDate(date)):undefined;var shouldDisableTouchEvent=function shouldDisableTouchEvent(){var disableTouchEvent=_marking.disableTouchEvent;var disableTouch=false;if(typeof disableTouchEvent==='boolean'){disableTouch=disableTouchEvent;}else if(typeof disableAllTouchEventsForDisabledDays==='boolean'&&isDisabled){disableTouch=disableAllTouchEventsForDisabledDays;}else if(typeof disableAllTouchEventsForInactiveDays==='boolean'&&isInactive){disableTouch=disableAllTouchEventsForInactiveDays;}return disableTouch;};var getContainerStyle=function getContainerStyle(){var customStyles=_marking.customStyles,selectedColor=_marking.selectedColor;var styles=[style.current.base];if(isSelected){styles.push(style.current.selected);if(selectedColor){styles.push({backgroundColor:selectedColor});}}else if(isToday){styles.push(style.current.today);}if(isCustom&&customStyles&&customStyles.container){if(customStyles.container.borderRadius===undefined){customStyles.container.borderRadius=16;}styles.push(customStyles.container);}return styles;};var getTextStyle=function getTextStyle(){var customStyles=_marking.customStyles,selectedTextColor=_marking.selectedTextColor;var styles=[style.current.text];if(isSelected){styles.push(style.current.selectedText);if(selectedTextColor){styles.push({color:selectedTextColor});}}else if(isDisabled){styles.push(style.current.disabledText);}else if(isToday){styles.push(style.current.todayText);}else if(isInactive){styles.push(style.current.inactiveText);}if(isCustom&&customStyles&&customStyles.text){styles.push(customStyles.text);}return styles;};var _onPress=useCallback(function(){onPress==null?void 0:onPress(dateData);},[onPress,date]);var _onLongPress=useCallback(function(){onLongPress==null?void 0:onLongPress(dateData);},[onLongPress,date]);var renderMarking=function renderMarking(){var marked=_marking.marked,dotColor=_marking.dotColor,dots=_marking.dots,periods=_marking.periods;return _jsx(Marking,{type:markingType,theme:theme,marked:isMultiDot?true:marked,selected:isSelected,disabled:isDisabled,inactive:isInactive,today:isToday,dotColor:dotColor,dots:dots,periods:periods});};var renderText=function renderText(){return _jsx(Text,{allowFontScaling:false,style:getTextStyle(),children:String(children)});};var renderContent=function renderContent(){return _jsxs(Fragment,{children:[renderText(),renderMarking()]});};var renderContainer=function renderContainer(){var activeOpacity=_marking.activeOpacity;return _jsx(TouchableOpacity,{testID:testID,style:getContainerStyle(),disabled:shouldDisableTouchEvent(),activeOpacity:activeOpacity,onPress:!shouldDisableTouchEvent()?_onPress:undefined,onLongPress:!shouldDisableTouchEvent()?_onLongPress:undefined,accessible:true,accessibilityRole:isDisabled?undefined:'button',accessibilityLabel:accessibilityLabel,children:isMultiPeriod?renderText():renderContent()});};var renderPeriodsContainer=function renderPeriodsContainer(){return _jsxs(View,{style:style.current.container,children:[renderContainer(),renderMarking()]});};return isMultiPeriod?renderPeriodsContainer():renderContainer();};export default BasicDay;BasicDay.displayName='BasicDay';BasicDay.propTypes={state:PropTypes.oneOf(['selected','disabled','inactive','today','']),marking:PropTypes.any,markingType:PropTypes.oneOf(values(Marking.markings)),theme:PropTypes.object,onPress:PropTypes.func,onLongPress:PropTypes.func,date:PropTypes.string,disableAllTouchEventsForDisabledDays:PropTypes.bool,disableAllTouchEventsForInactiveDays:PropTypes.bool};","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/calendar/day/basic/index.js"],"names":["XDate","values","PropTypes","React","Fragment","useCallback","useRef","xdateToData","styleConstructor","Marking","BasicDay","props","theme","date","onPress","onLongPress","markingType","marking","state","disableAllTouchEventsForDisabledDays","disableAllTouchEventsForInactiveDays","accessibilityLabel","children","testID","style","_marking","isSelected","selected","isDisabled","disabled","isInactive","inactive","isToday","isMultiDot","markings","MULTI_DOT","isMultiPeriod","MULTI_PERIOD","isCustom","CUSTOM","dateData","undefined","shouldDisableTouchEvent","disableTouchEvent","disableTouch","getContainerStyle","customStyles","selectedColor","styles","current","base","push","backgroundColor","today","container","borderRadius","getTextStyle","selectedTextColor","text","selectedText","color","disabledText","todayText","inactiveText","_onPress","_onLongPress","renderMarking","marked","dotColor","dots","periods","renderText","String","renderContent","renderContainer","activeOpacity","renderPeriodsContainer","displayName","propTypes","oneOf","any","object","func","string","bool"],"mappings":"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","sourcesContent":["import XDate from 'xdate';\nimport values from 'lodash/values';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useCallback, useRef } from 'react';\nimport { TouchableOpacity, Text, View } from 'react-native';\nimport { xdateToData } from '../../../interface';\nimport styleConstructor from './style';\nimport Marking from '../marking';\nconst BasicDay = (props) => {\n    const { theme, date, onPress, onLongPress, markingType, marking, state, disableAllTouchEventsForDisabledDays, disableAllTouchEventsForInactiveDays, accessibilityLabel, children, testID } = props;\n    const style = useRef(styleConstructor(theme));\n    const _marking = marking || {};\n    const isSelected = _marking.selected || state === 'selected';\n    const isDisabled = typeof _marking.disabled !== 'undefined' ? _marking.disabled : state === 'disabled';\n    const isInactive = _marking?.inactive;\n    const isToday = state === 'today';\n    const isMultiDot = markingType === Marking.markings.MULTI_DOT;\n    const isMultiPeriod = markingType === Marking.markings.MULTI_PERIOD;\n    const isCustom = markingType === Marking.markings.CUSTOM;\n    const dateData = date ? xdateToData(new XDate(date)) : undefined;\n    const shouldDisableTouchEvent = () => {\n        const { disableTouchEvent } = _marking;\n        let disableTouch = false;\n        if (typeof disableTouchEvent === 'boolean') {\n            disableTouch = disableTouchEvent;\n        }\n        else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && isDisabled) {\n            disableTouch = disableAllTouchEventsForDisabledDays;\n        }\n        else if (typeof disableAllTouchEventsForInactiveDays === 'boolean' && isInactive) {\n            disableTouch = disableAllTouchEventsForInactiveDays;\n        }\n        return disableTouch;\n    };\n    const getContainerStyle = () => {\n        const { customStyles, selectedColor } = _marking;\n        const styles = [style.current.base];\n        if (isSelected) {\n            styles.push(style.current.selected);\n            if (selectedColor) {\n                styles.push({ backgroundColor: selectedColor });\n            }\n        }\n        else if (isToday) {\n            styles.push(style.current.today);\n        }\n        //Custom marking type\n        if (isCustom && customStyles && customStyles.container) {\n            if (customStyles.container.borderRadius === undefined) {\n                customStyles.container.borderRadius = 16;\n            }\n            styles.push(customStyles.container);\n        }\n        return styles;\n    };\n    const getTextStyle = () => {\n        const { customStyles, selectedTextColor } = _marking;\n        const styles = [style.current.text];\n        if (isSelected) {\n            styles.push(style.current.selectedText);\n            if (selectedTextColor) {\n                styles.push({ color: selectedTextColor });\n            }\n        }\n        else if (isDisabled) {\n            styles.push(style.current.disabledText);\n        }\n        else if (isToday) {\n            styles.push(style.current.todayText);\n        }\n        else if (isInactive) {\n            styles.push(style.current.inactiveText);\n        }\n        //Custom marking type\n        if (isCustom && customStyles && customStyles.text) {\n            styles.push(customStyles.text);\n        }\n        return styles;\n    };\n    const _onPress = useCallback(() => {\n        onPress?.(dateData);\n    }, [onPress, date]);\n    const _onLongPress = useCallback(() => {\n        onLongPress?.(dateData);\n    }, [onLongPress, date]);\n    const renderMarking = () => {\n        const { marked, dotColor, dots, periods } = _marking;\n        return (<Marking type={markingType} theme={theme} marked={isMultiDot ? true : marked} selected={isSelected} disabled={isDisabled} inactive={isInactive} today={isToday} dotColor={dotColor} dots={dots} periods={periods}/>);\n    };\n    const renderText = () => {\n        return (<Text allowFontScaling={false} style={getTextStyle()}>\n        {String(children)}\n      </Text>);\n    };\n    const renderContent = () => {\n        return (<Fragment>\n        {renderText()}\n        {renderMarking()}\n      </Fragment>);\n    };\n    const renderContainer = () => {\n        const { activeOpacity } = _marking;\n        return (<TouchableOpacity testID={testID} style={getContainerStyle()} disabled={shouldDisableTouchEvent()} activeOpacity={activeOpacity} onPress={!shouldDisableTouchEvent() ? _onPress : undefined} onLongPress={!shouldDisableTouchEvent() ? _onLongPress : undefined} accessible accessibilityRole={isDisabled ? undefined : 'button'} accessibilityLabel={accessibilityLabel}>\n        {isMultiPeriod ? renderText() : renderContent()}\n      </TouchableOpacity>);\n    };\n    const renderPeriodsContainer = () => {\n        return (<View style={style.current.container}>\n        {renderContainer()}\n        {renderMarking()}\n      </View>);\n    };\n    return isMultiPeriod ? renderPeriodsContainer() : renderContainer();\n};\nexport default BasicDay;\nBasicDay.displayName = 'BasicDay';\nBasicDay.propTypes = {\n    state: PropTypes.oneOf(['selected', 'disabled', 'inactive', 'today', '']),\n    marking: PropTypes.any,\n    markingType: PropTypes.oneOf(values(Marking.markings)),\n    theme: PropTypes.object,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    date: PropTypes.string,\n    disableAllTouchEventsForDisabledDays: PropTypes.bool,\n    disableAllTouchEventsForInactiveDays: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}