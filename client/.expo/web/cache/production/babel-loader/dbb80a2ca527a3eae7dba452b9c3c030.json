{"ast":null,"code":"import XDate from'xdate';import{sameMonth,isToday,isPastDate}from\"../../dateutils\";import{xdateToData,toMarkingFormat}from\"../../interface\";import{getDefaultLocale}from\"../../services\";var commons=require(\"../commons\");var TOP_POSITION=65;export var _getIconDown=function _getIconDown(){return require(\"../../img/down.png\");};export var _getIconUp=function _getIconUp(){return require(\"../../img/up.png\");};export var getButtonIcon=function getButtonIcon(date){var showTodayButton=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(!showTodayButton){return undefined;}var icon=isPastDate(date)?_getIconDown():_getIconUp();return icon;};export var setDate=function setDate(props,date,newDate,updateState,updateSource){var buttonIcon=getButtonIcon(date,props.showTodayButton);updateState(buttonIcon);props.onDateChanged==null?void 0:props.onDateChanged(date,updateSource);if(!sameMonth(new XDate(date),new XDate(newDate))){props.onMonthChange==null?void 0:props.onMonthChange(xdateToData(new XDate(date)),updateSource);}};export var setDisabled=function setDisabled(showTodayButton,newDisabledValue,oldDisabledValue,updateState){if(!showTodayButton||newDisabledValue===oldDisabledValue){return;}updateState(newDisabledValue);};export var shouldAnimateTodayButton=function shouldAnimateTodayButton(props){return props.showTodayButton;};export var getTodayDate=function getTodayDate(){return toMarkingFormat(new XDate());};export var getPositionAnimation=function getPositionAnimation(date){var todayBottomMargin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var toValue=isToday(new XDate(date))?TOP_POSITION:-todayBottomMargin||-TOP_POSITION;return{toValue:toValue,tension:30,friction:8,useNativeDriver:true};};export var shouldAnimateOpacity=function shouldAnimateOpacity(props){return props.disabledOpacity;};export var getOpacityAnimation=function getOpacityAnimation(_ref,disabled){var _ref$disabledOpacity=_ref.disabledOpacity,disabledOpacity=_ref$disabledOpacity===void 0?0:_ref$disabledOpacity;return{toValue:disabled?disabledOpacity:1,duration:500,useNativeDriver:true};};export var getTodayFormatted=function getTodayFormatted(){var todayString=getDefaultLocale().today||commons.todayString;var today=todayString.charAt(0).toUpperCase()+todayString.slice(1);return today;};","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/expandableCalendar/Context/Presenter.js"],"names":["XDate","sameMonth","isToday","isPastDate","xdateToData","toMarkingFormat","getDefaultLocale","commons","require","TOP_POSITION","_getIconDown","_getIconUp","getButtonIcon","date","showTodayButton","undefined","icon","setDate","props","newDate","updateState","updateSource","buttonIcon","onDateChanged","onMonthChange","setDisabled","newDisabledValue","oldDisabledValue","shouldAnimateTodayButton","getTodayDate","getPositionAnimation","todayBottomMargin","toValue","tension","friction","useNativeDriver","shouldAnimateOpacity","disabledOpacity","getOpacityAnimation","disabled","duration","getTodayFormatted","todayString","today","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import XDate from 'xdate';\nimport { sameMonth, isToday, isPastDate } from '../../dateutils';\nimport { xdateToData, toMarkingFormat } from '../../interface';\nimport { getDefaultLocale } from '../../services';\nconst commons = require('../commons');\nconst TOP_POSITION = 65;\nexport const _getIconDown = () => {\n    return require('../../img/down.png');\n};\nexport const _getIconUp = () => {\n    return require('../../img/up.png');\n};\nexport const getButtonIcon = (date, showTodayButton = true) => {\n    if (!showTodayButton) {\n        return undefined;\n    }\n    const icon = isPastDate(date) ? _getIconDown() : _getIconUp();\n    return icon;\n};\nexport const setDate = (props, date, newDate, updateState, updateSource) => {\n    const buttonIcon = getButtonIcon(date, props.showTodayButton);\n    updateState(buttonIcon);\n    props.onDateChanged?.(date, updateSource);\n    if (!sameMonth(new XDate(date), new XDate(newDate))) {\n        props.onMonthChange?.(xdateToData(new XDate(date)), updateSource);\n    }\n};\nexport const setDisabled = (showTodayButton, newDisabledValue, oldDisabledValue, updateState) => {\n    if (!showTodayButton || newDisabledValue === oldDisabledValue) {\n        return;\n    }\n    updateState(newDisabledValue);\n};\nexport const shouldAnimateTodayButton = (props) => {\n    return props.showTodayButton;\n};\nexport const getTodayDate = () => {\n    return toMarkingFormat(new XDate());\n};\nexport const getPositionAnimation = (date, todayBottomMargin = 0) => {\n    const toValue = isToday(new XDate(date)) ? TOP_POSITION : -todayBottomMargin || -TOP_POSITION;\n    return {\n        toValue,\n        tension: 30,\n        friction: 8,\n        useNativeDriver: true\n    };\n};\nexport const shouldAnimateOpacity = (props) => {\n    return props.disabledOpacity;\n};\nexport const getOpacityAnimation = ({ disabledOpacity = 0 }, disabled) => {\n    return {\n        toValue: disabled ? disabledOpacity : 1,\n        duration: 500,\n        useNativeDriver: true\n    };\n};\nexport const getTodayFormatted = () => {\n    const todayString = getDefaultLocale().today || commons.todayString;\n    const today = todayString.charAt(0).toUpperCase() + todayString.slice(1);\n    return today;\n};\n"]},"metadata":{},"sourceType":"module"}