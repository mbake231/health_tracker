{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import XDate from'xdate';import constants from\"../commons/constants\";import inRange from'lodash/inRange';export var HOUR_BLOCK_HEIGHT=100;var OVERLAP_EVENTS_SPACINGS=10;var RIGHT_EDGE_SPACING=10;function buildEvent(event,left,width,_ref){var _ref$dayStart=_ref.dayStart,dayStart=_ref$dayStart===void 0?0:_ref$dayStart,_ref$hourBlockHeight=_ref.hourBlockHeight,hourBlockHeight=_ref$hourBlockHeight===void 0?HOUR_BLOCK_HEIGHT:_ref$hourBlockHeight;var startTime=new XDate(event.start);var endTime=event.end?new XDate(event.end):new XDate(startTime).addHours(1);var dayStartTime=new XDate(startTime).clearTime();return _objectSpread(_objectSpread({},event),{},{top:(dayStartTime.diffHours(startTime)-dayStart)*hourBlockHeight,height:startTime.diffHours(endTime)*hourBlockHeight,width:width,left:left});}function hasCollision(a,b){return a.end>b.start&&a.start<b.end;}function calcColumnSpan(event,columnIndex,columns){var colSpan=1;for(var i=columnIndex+1;i<columns.length;i++){var column=columns[i];var foundCollision=column.find(function(ev){return hasCollision(event,ev);});if(foundCollision){return colSpan;}colSpan++;}return colSpan;}function packOverlappingEventGroup(columns,calculatedEvents,populateOptions){var _populateOptions$scre=populateOptions.screenWidth,screenWidth=_populateOptions$scre===void 0?constants.screenWidth:_populateOptions$scre,_populateOptions$righ=populateOptions.rightEdgeSpacing,rightEdgeSpacing=_populateOptions$righ===void 0?RIGHT_EDGE_SPACING:_populateOptions$righ,_populateOptions$over=populateOptions.overlapEventsSpacing,overlapEventsSpacing=_populateOptions$over===void 0?OVERLAP_EVENTS_SPACINGS:_populateOptions$over;columns.forEach(function(column,columnIndex){column.forEach(function(event){var totalWidth=screenWidth-rightEdgeSpacing;var columnSpan=calcColumnSpan(event,columnIndex,columns);var eventLeft=columnIndex/columns.length*totalWidth;var eventWidth=totalWidth*(columnSpan/columns.length);if(columnIndex+columnSpan<=columns.length-1){eventWidth-=overlapEventsSpacing;}calculatedEvents.push(buildEvent(event,eventLeft,eventWidth,populateOptions));});});}export function populateEvents(_events,populateOptions){var lastEnd=null;var columns=[];var calculatedEvents=[];var events=_events.map(function(ev,index){return _objectSpread(_objectSpread({},ev),{},{index:index});}).sort(function(a,b){if(a.start<b.start)return-1;if(a.start>b.start)return 1;if(a.end<b.end)return-1;if(a.end>b.end)return 1;return 0;});events.forEach(function(ev){if(lastEnd!==null&&ev.start>=lastEnd){packOverlappingEventGroup(columns,calculatedEvents,populateOptions);columns=[];lastEnd=null;}var placed=false;for(var i=0;i<columns.length;i++){var col=columns[i];if(!hasCollision(col[col.length-1],ev)){col.push(ev);placed=true;break;}}if(!placed){columns.push([ev]);}if(lastEnd===null||ev.end>lastEnd){lastEnd=ev.end;}});if(columns.length>0){packOverlappingEventGroup(columns,calculatedEvents,populateOptions);}return calculatedEvents;}export function buildUnavailableHoursBlocks(){var unavailableHours=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1?arguments[1]:undefined;var _ref2=options||{},_ref2$hourBlockHeight=_ref2.hourBlockHeight,hourBlockHeight=_ref2$hourBlockHeight===void 0?HOUR_BLOCK_HEIGHT:_ref2$hourBlockHeight,_ref2$dayStart=_ref2.dayStart,dayStart=_ref2$dayStart===void 0?0:_ref2$dayStart,_ref2$dayEnd=_ref2.dayEnd,dayEnd=_ref2$dayEnd===void 0?24:_ref2$dayEnd;var totalDayHours=dayEnd-dayStart;var totalDayHeight=(dayEnd-dayStart)*hourBlockHeight;return unavailableHours.map(function(hours){if(!inRange(hours.start,0,25)||!inRange(hours.end,0,25)){console.error('Calendar Timeline unavailableHours is invalid. Hours should be between 0 and 24');return undefined;}if(hours.start>=hours.end){console.error('Calendar Timeline availableHours is invalid. start hour should be earlier than end hour');return undefined;}var startFixed=Math.max(hours.start,dayStart);var endFixed=Math.min(hours.end,dayEnd);return{top:(startFixed-dayStart)/totalDayHours*totalDayHeight,height:(endFixed-startFixed)*hourBlockHeight};}).filter(Boolean);}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/timeline/Packer.js"],"names":["XDate","constants","inRange","HOUR_BLOCK_HEIGHT","OVERLAP_EVENTS_SPACINGS","RIGHT_EDGE_SPACING","buildEvent","event","left","width","dayStart","hourBlockHeight","startTime","start","endTime","end","addHours","dayStartTime","clearTime","top","diffHours","height","hasCollision","a","b","calcColumnSpan","columnIndex","columns","colSpan","i","length","column","foundCollision","find","ev","packOverlappingEventGroup","calculatedEvents","populateOptions","screenWidth","rightEdgeSpacing","overlapEventsSpacing","forEach","totalWidth","columnSpan","eventLeft","eventWidth","push","populateEvents","_events","lastEnd","events","map","index","sort","placed","col","buildUnavailableHoursBlocks","unavailableHours","options","dayEnd","totalDayHours","totalDayHeight","hours","console","error","undefined","startFixed","Math","max","endFixed","min","filter","Boolean"],"mappings":"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","sourcesContent":["// @flow\nimport XDate from 'xdate';\nimport constants from '../commons/constants';\nimport inRange from 'lodash/inRange';\nexport const HOUR_BLOCK_HEIGHT = 100;\nconst OVERLAP_EVENTS_SPACINGS = 10;\nconst RIGHT_EDGE_SPACING = 10;\nfunction buildEvent(event, left, width, { dayStart = 0, hourBlockHeight = HOUR_BLOCK_HEIGHT }) {\n    const startTime = new XDate(event.start);\n    const endTime = event.end ? new XDate(event.end) : new XDate(startTime).addHours(1);\n    const dayStartTime = new XDate(startTime).clearTime();\n    return {\n        ...event,\n        top: (dayStartTime.diffHours(startTime) - dayStart) * hourBlockHeight,\n        height: startTime.diffHours(endTime) * hourBlockHeight,\n        width,\n        left\n    };\n}\nfunction hasCollision(a, b) {\n    return a.end > b.start && a.start < b.end;\n}\nfunction calcColumnSpan(event, columnIndex, columns) {\n    let colSpan = 1;\n    for (let i = columnIndex + 1; i < columns.length; i++) {\n        const column = columns[i];\n        const foundCollision = column.find(ev => hasCollision(event, ev));\n        if (foundCollision) {\n            return colSpan;\n        }\n        colSpan++;\n    }\n    return colSpan;\n}\nfunction packOverlappingEventGroup(columns, calculatedEvents, populateOptions) {\n    const { screenWidth = constants.screenWidth, rightEdgeSpacing = RIGHT_EDGE_SPACING, overlapEventsSpacing = OVERLAP_EVENTS_SPACINGS } = populateOptions;\n    columns.forEach((column, columnIndex) => {\n        column.forEach(event => {\n            const totalWidth = screenWidth - rightEdgeSpacing;\n            const columnSpan = calcColumnSpan(event, columnIndex, columns);\n            const eventLeft = (columnIndex / columns.length) * totalWidth;\n            let eventWidth = totalWidth * (columnSpan / columns.length);\n            if (columnIndex + columnSpan <= columns.length - 1) {\n                eventWidth -= overlapEventsSpacing;\n            }\n            calculatedEvents.push(buildEvent(event, eventLeft, eventWidth, populateOptions));\n        });\n    });\n}\nexport function populateEvents(_events, populateOptions) {\n    let lastEnd = null;\n    let columns = [];\n    const calculatedEvents = [];\n    const events = _events\n        .map((ev, index) => ({ ...ev, index: index }))\n        .sort(function (a, b) {\n        if (a.start < b.start)\n            return -1;\n        if (a.start > b.start)\n            return 1;\n        if (a.end < b.end)\n            return -1;\n        if (a.end > b.end)\n            return 1;\n        return 0;\n    });\n    events.forEach(function (ev) {\n        // Reset recent overlapping event group and start a new one\n        if (lastEnd !== null && ev.start >= lastEnd) {\n            packOverlappingEventGroup(columns, calculatedEvents, populateOptions);\n            columns = [];\n            lastEnd = null;\n        }\n        // Place current event in the right column where it doesn't overlap\n        let placed = false;\n        for (let i = 0; i < columns.length; i++) {\n            const col = columns[i];\n            if (!hasCollision(col[col.length - 1], ev)) {\n                col.push(ev);\n                placed = true;\n                break;\n            }\n        }\n        // If curr event wasn't placed in any of the columns, create a new column for it\n        if (!placed) {\n            columns.push([ev]);\n        }\n        if (lastEnd === null || ev.end > lastEnd) {\n            lastEnd = ev.end;\n        }\n    });\n    if (columns.length > 0) {\n        packOverlappingEventGroup(columns, calculatedEvents, populateOptions);\n    }\n    return calculatedEvents;\n}\nexport function buildUnavailableHoursBlocks(unavailableHours = [], options) {\n    const { hourBlockHeight = HOUR_BLOCK_HEIGHT, dayStart = 0, dayEnd = 24 } = options || {};\n    const totalDayHours = dayEnd - dayStart;\n    const totalDayHeight = (dayEnd - dayStart) * hourBlockHeight;\n    return (unavailableHours\n        .map(hours => {\n        if (!inRange(hours.start, 0, 25) || !inRange(hours.end, 0, 25)) {\n            console.error('Calendar Timeline unavailableHours is invalid. Hours should be between 0 and 24');\n            return undefined;\n        }\n        if (hours.start >= hours.end) {\n            console.error('Calendar Timeline availableHours is invalid. start hour should be earlier than end hour');\n            return undefined;\n        }\n        const startFixed = Math.max(hours.start, dayStart);\n        const endFixed = Math.min(hours.end, dayEnd);\n        return {\n            top: ((startFixed - dayStart) / totalDayHours) * totalDayHeight,\n            height: (endFixed - startFixed) * hourBlockHeight\n        };\n    })\n        // Note: this filter falsy values (undefined blocks)\n        .filter(Boolean));\n}\n"]},"metadata":{},"sourceType":"module"}