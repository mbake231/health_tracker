{"ast":null,"code":"import Dimensions from\"react-native-web/dist/exports/Dimensions\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";var _Dimensions$get=Dimensions.get('window'),screenWidth=_Dimensions$get.width,screenHeight=_Dimensions$get.height;var isRTL=I18nManager.isRTL;var isAndroid=Platform.OS==='android';var isIOS=Platform.OS==='ios';var screenAspectRatio=screenWidth<screenHeight?screenHeight/screenWidth:screenWidth/screenHeight;var isTablet=Platform.isPad||screenAspectRatio<1.6&&Math.max(screenWidth,screenHeight)>=900;export default{screenWidth:screenWidth,screenHeight:screenHeight,isRTL:isRTL,isAndroid:isAndroid,isIOS:isIOS,isTablet:isTablet};","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/commons/constants.js"],"names":["Dimensions","get","screenWidth","width","screenHeight","height","isRTL","I18nManager","isAndroid","Platform","OS","isIOS","screenAspectRatio","isTablet","isPad","Math","max"],"mappings":"iMACA,oBAAqDA,UAAU,CAACC,GAAX,CAAe,QAAf,CAArD,CAAeC,WAAf,iBAAQC,KAAR,CAAoCC,YAApC,iBAA4BC,MAA5B,CACA,GAAMC,CAAAA,KAAK,CAAGC,WAAW,CAACD,KAA1B,CACA,GAAME,CAAAA,SAAS,CAAGC,QAAQ,CAACC,EAAT,GAAgB,SAAlC,CACA,GAAMC,CAAAA,KAAK,CAAGF,QAAQ,CAACC,EAAT,GAAgB,KAA9B,CACA,GAAME,CAAAA,iBAAiB,CAAGV,WAAW,CAAGE,YAAd,CAA6BA,YAAY,CAAGF,WAA5C,CAA0DA,WAAW,CAAGE,YAAlG,CACA,GAAMS,CAAAA,QAAQ,CAAGJ,QAAQ,CAACK,KAAT,EAAmBF,iBAAiB,CAAG,GAApB,EAA2BG,IAAI,CAACC,GAAL,CAASd,WAAT,CAAsBE,YAAtB,GAAuC,GAAtG,CACA,cAAe,CACXF,WAAW,CAAXA,WADW,CAEXE,YAAY,CAAZA,YAFW,CAGXE,KAAK,CAALA,KAHW,CAIXE,SAAS,CAATA,SAJW,CAKXG,KAAK,CAALA,KALW,CAMXE,QAAQ,CAARA,QANW,CAAf","sourcesContent":["import { Dimensions, I18nManager, Platform } from 'react-native';\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\nconst isRTL = I18nManager.isRTL;\nconst isAndroid = Platform.OS === 'android';\nconst isIOS = Platform.OS === 'ios';\nconst screenAspectRatio = screenWidth < screenHeight ? screenHeight / screenWidth : screenWidth / screenHeight;\nconst isTablet = Platform.isPad || (screenAspectRatio < 1.6 && Math.max(screenWidth, screenHeight) >= 900);\nexport default {\n    screenWidth,\n    screenHeight,\n    isRTL,\n    isAndroid,\n    isIOS,\n    isTablet\n};\n"]},"metadata":{},"sourceType":"module"}