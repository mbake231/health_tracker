{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import PropTypes from'prop-types';import XDate from'xdate';import React,{useEffect,useRef,useState,useCallback,useMemo}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{toMarkingFormat}from\"../../interface\";import styleConstructor from\"../style\";import{UpdateSources}from\"../commons\";import CalendarContext from\"./index\";import{getButtonIcon,setDate,setDisabled,shouldAnimateTodayButton,getPositionAnimation,shouldAnimateOpacity,getOpacityAnimation,getTodayDate,getTodayFormatted}from\"./Presenter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TOP_POSITION=65;var CalendarProvider=function CalendarProvider(props){var theme=props.theme,date=props.date,_props$showTodayButto=props.showTodayButton,showTodayButton=_props$showTodayButto===void 0?false:_props$showTodayButto,todayBottomMargin=props.todayBottomMargin,todayButtonStyle=props.todayButtonStyle,propsStyle=props.style,children=props.children;var style=useRef(styleConstructor(theme));var _useState=useState(date),_useState2=_slicedToArray(_useState,2),prevDate=_useState2[0],setPrevDate=_useState2[1];var _useState3=useState(date),_useState4=_slicedToArray(_useState3,2),currentDate=_useState4[0],setCurrentDate=_useState4[1];var _useState5=useState(UpdateSources.CALENDAR_INIT),_useState6=_slicedToArray(_useState5,2),updateSource=_useState6[0],setUpdateSource=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDisabled=_useState8[0],setIsDisabled=_useState8[1];var _useState9=useState(getButtonIcon(date||toMarkingFormat(new XDate()),showTodayButton)),_useState10=_slicedToArray(_useState9,2),buttonIcon=_useState10[0],setButtonIcon=_useState10[1];var buttonY=useRef(new Animated.Value(todayBottomMargin?-todayBottomMargin:-TOP_POSITION));var opacity=useRef(new Animated.Value(1));var wrapperStyle=useMemo(function(){return[style.current.contextWrapper,propsStyle];},[style,propsStyle]);useEffect(function(){if(date){_setDate(date,UpdateSources.PROP_UPDATE);}},[date]);useEffect(function(){animateTodayButton(currentDate);},[todayBottomMargin,currentDate]);var _setDate=function _setDate(date,updateSource){var updateState=function updateState(buttonIcon){setPrevDate(currentDate);setCurrentDate(date);setUpdateSource(updateSource);setButtonIcon(buttonIcon);};setDate(props,date,currentDate,updateState,updateSource);};var _setDisabled=function _setDisabled(disabled){var updateState=function updateState(disabled){setIsDisabled(disabled);animateOpacity(disabled);};setDisabled(showTodayButton,disabled,isDisabled,updateState);};var contextValue=useMemo(function(){return{date:currentDate,prevDate:prevDate,updateSource:updateSource,setDate:_setDate,setDisabled:_setDisabled};},[currentDate,prevDate,updateSource]);var animateTodayButton=function animateTodayButton(date){if(shouldAnimateTodayButton(props)){var animationData=getPositionAnimation(date,todayBottomMargin);Animated.spring(buttonY.current,_objectSpread({},animationData)).start();}};var animateOpacity=function animateOpacity(disabled){if(shouldAnimateOpacity(props)){var animationData=getOpacityAnimation(props,disabled);Animated.timing(opacity.current,_objectSpread({},animationData)).start();}};var onTodayPress=useCallback(function(){_setDate(getTodayDate(),UpdateSources.TODAY_PRESS);},[_setDate]);var renderTodayButton=function renderTodayButton(){var today=getTodayFormatted();return _jsx(Animated.View,{style:[style.current.todayButtonContainer,{transform:[{translateY:buttonY.current}]}],children:_jsxs(TouchableOpacity,{style:[style.current.todayButton,todayButtonStyle],onPress:onTodayPress,disabled:isDisabled,children:[_jsx(Animated.Image,{style:[style.current.todayButtonImage,{opacity:opacity.current}],source:buttonIcon}),_jsx(Animated.Text,{allowFontScaling:false,style:[style.current.todayButtonText,{opacity:opacity.current}],children:today})]})});};return _jsxs(CalendarContext.Provider,{value:contextValue,children:[_jsx(View,{style:wrapperStyle,children:children}),showTodayButton&&renderTodayButton()]});};export default CalendarProvider;CalendarProvider.displayName='CalendarProvider';CalendarProvider.propTypes={date:PropTypes.any.isRequired,onDateChanged:PropTypes.func,onMonthChange:PropTypes.func,showTodayButton:PropTypes.bool,todayBottomMargin:PropTypes.number,todayButtonStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.number,PropTypes.array]),disabledOpacity:PropTypes.number};","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"names":["PropTypes","XDate","React","useEffect","useRef","useState","useCallback","useMemo","toMarkingFormat","styleConstructor","UpdateSources","CalendarContext","getButtonIcon","setDate","setDisabled","shouldAnimateTodayButton","getPositionAnimation","shouldAnimateOpacity","getOpacityAnimation","getTodayDate","getTodayFormatted","TOP_POSITION","CalendarProvider","props","theme","date","showTodayButton","todayBottomMargin","todayButtonStyle","propsStyle","style","children","prevDate","setPrevDate","currentDate","setCurrentDate","CALENDAR_INIT","updateSource","setUpdateSource","isDisabled","setIsDisabled","buttonIcon","setButtonIcon","buttonY","Animated","Value","opacity","wrapperStyle","current","contextWrapper","_setDate","PROP_UPDATE","animateTodayButton","updateState","_setDisabled","disabled","animateOpacity","contextValue","animationData","spring","start","timing","onTodayPress","TODAY_PRESS","renderTodayButton","today","todayButtonContainer","transform","translateY","todayButton","todayButtonImage","todayButtonText","displayName","propTypes","any","isRequired","onDateChanged","func","onMonthChange","bool","number","oneOfType","object","array","disabledOpacity"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { Animated, TouchableOpacity, View } from 'react-native';\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from '../style';\nimport { UpdateSources } from '../commons';\nimport CalendarContext from './index';\nimport { getButtonIcon, setDate, setDisabled, shouldAnimateTodayButton, getPositionAnimation, shouldAnimateOpacity, getOpacityAnimation, getTodayDate, getTodayFormatted } from './Presenter';\nconst TOP_POSITION = 65;\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst CalendarProvider = (props) => {\n    const { theme, date, showTodayButton = false, todayBottomMargin, todayButtonStyle, style: propsStyle, children } = props;\n    const style = useRef(styleConstructor(theme));\n    const [prevDate, setPrevDate] = useState(date);\n    const [currentDate, setCurrentDate] = useState(date);\n    const [updateSource, setUpdateSource] = useState(UpdateSources.CALENDAR_INIT);\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [buttonIcon, setButtonIcon] = useState(getButtonIcon(date || toMarkingFormat(new XDate()), showTodayButton));\n    const buttonY = useRef(new Animated.Value(todayBottomMargin ? -todayBottomMargin : -TOP_POSITION));\n    const opacity = useRef(new Animated.Value(1));\n    const wrapperStyle = useMemo(() => {\n        return [style.current.contextWrapper, propsStyle];\n    }, [style, propsStyle]);\n    useEffect(() => {\n        if (date) {\n            _setDate(date, UpdateSources.PROP_UPDATE);\n        }\n    }, [date]);\n    useEffect(() => {\n        animateTodayButton(currentDate);\n    }, [todayBottomMargin, currentDate]);\n    const _setDate = (date, updateSource) => {\n        const updateState = (buttonIcon) => {\n            setPrevDate(currentDate);\n            setCurrentDate(date);\n            setUpdateSource(updateSource);\n            setButtonIcon(buttonIcon);\n        };\n        setDate(props, date, currentDate, updateState, updateSource);\n    };\n    const _setDisabled = (disabled) => {\n        const updateState = (disabled) => {\n            setIsDisabled(disabled);\n            animateOpacity(disabled);\n        };\n        setDisabled(showTodayButton, disabled, isDisabled, updateState);\n    };\n    const contextValue = useMemo(() => {\n        return {\n            date: currentDate,\n            prevDate: prevDate,\n            updateSource: updateSource,\n            setDate: _setDate,\n            setDisabled: _setDisabled\n        };\n    }, [currentDate, prevDate, updateSource]);\n    const animateTodayButton = (date) => {\n        if (shouldAnimateTodayButton(props)) {\n            const animationData = getPositionAnimation(date, todayBottomMargin);\n            Animated.spring(buttonY.current, {\n                ...animationData\n            }).start();\n        }\n    };\n    const animateOpacity = (disabled) => {\n        if (shouldAnimateOpacity(props)) {\n            const animationData = getOpacityAnimation(props, disabled);\n            Animated.timing(opacity.current, {\n                ...animationData\n            }).start();\n        }\n    };\n    const onTodayPress = useCallback(() => {\n        _setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n    }, [_setDate]);\n    const renderTodayButton = () => {\n        const today = getTodayFormatted();\n        return (<Animated.View style={[style.current.todayButtonContainer, { transform: [{ translateY: buttonY.current }] }]}>\n        <TouchableOpacity style={[style.current.todayButton, todayButtonStyle]} onPress={onTodayPress} disabled={isDisabled}>\n          <Animated.Image style={[style.current.todayButtonImage, { opacity: opacity.current }]} source={buttonIcon}/>\n          <Animated.Text allowFontScaling={false} style={[style.current.todayButtonText, { opacity: opacity.current }]}>\n            {today}\n          </Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>);\n    };\n    return (<CalendarContext.Provider value={contextValue}>\n      <View style={wrapperStyle}>{children}</View>\n      {showTodayButton && renderTodayButton()}\n    </CalendarContext.Provider>);\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';\nCalendarProvider.propTypes = {\n    date: PropTypes.any.isRequired,\n    onDateChanged: PropTypes.func,\n    onMonthChange: PropTypes.func,\n    showTodayButton: PropTypes.bool,\n    todayBottomMargin: PropTypes.number,\n    todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    disabledOpacity: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}