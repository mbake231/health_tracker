{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import XDate from'xdate';import React from'react';import{toMarkingFormat}from\"../../interface\";import constants from\"../../commons/constants\";var commons=require(\"../commons\");var updateSources=commons.UpdateSources;var NUMBER_OF_PAGES=2;var Presenter=function(){function Presenter(){var _this=this;_classCallCheck(this,Presenter);this._applyAndroidRtlFix=constants.isAndroid&&constants.isRTL;this._firstAndroidRTLScrollIgnored=!this._applyAndroidRtlFix;this.list=React.createRef();this.scrollToIndex=function(animated){var _this$list,_this$list$current;(_this$list=_this.list)==null?void 0:(_this$list$current=_this$list.current)==null?void 0:_this$list$current.scrollToIndex({animated:animated,index:NUMBER_OF_PAGES});};this.onDayPress=function(context,value){context.setDate==null?void 0:context.setDate(value.dateString,updateSources.DAY_PRESS);};this.onScroll=function(_ref){var context=_ref.context,updateState=_ref.updateState,x=_ref.x,page=_ref.page,items=_ref.items,width=_ref.width;if(!_this._firstAndroidRTLScrollIgnored){_this._firstAndroidRTLScrollIgnored=true;return;}x=_this._getX(x,items==null?void 0:items.length,width);var newPage=_this._getNewPage(x,width);if(_this._shouldUpdateState(page,newPage)){context.setDate==null?void 0:context.setDate(items[newPage],updateSources.WEEK_SCROLL);var data=_this._getItemsForPage(newPage,items);updateState(data,newPage);}};this.onMomentumScrollEnd=function(_ref2){var items=_ref2.items,props=_ref2.props,page=_ref2.page,updateItems=_ref2.updateItems;if(_this._isFirstPage(page)||_this._isLastPage(page,items)){_this.scrollToIndex(false);var newWeekArray=_this.getDatesArray(props);var updatedItems;if(_this._isLastPage(page,items)){updatedItems=_this._mergeArraysFromEnd(items,newWeekArray);}else{updatedItems=_this._mergeArraysFromTop(items,newWeekArray);}updateItems(updatedItems);}};this.shouldComponentUpdate=function(context,prevContext){var date=context.date,updateSource=context.updateSource;return date!==prevContext.date&&updateSource!==updateSources.WEEK_SCROLL;};this.getDatesArray=function(args){var array=[];for(var index=-NUMBER_OF_PAGES;index<=NUMBER_OF_PAGES;index++){var d=_this.getDate(args,index);array.push(d);}return array;};this._shouldUpdateState=function(page,newPage){return page!==newPage;};this._getX=function(x,itemsCount,containerWidth){if(_this._applyAndroidRtlFix){var numberOfPages=itemsCount-1;var overallWidth=numberOfPages*containerWidth;return overallWidth-x;}return x;};this._getNewPage=function(x,containerWidth){return Math.round(x/containerWidth);};this._isFirstPage=function(page){return page===0;};this._isLastPage=function(page,items){return page===items.length-1;};this._getNextPageItems=function(items){return items.map(function(_,i){var index=i<=NUMBER_OF_PAGES?i+NUMBER_OF_PAGES:i;return items[index];});};this._getFirstPageItems=function(items){return items.map(function(_,i){var index=i>=NUMBER_OF_PAGES?i-NUMBER_OF_PAGES:i;return items[index];});};this._mergeArraysFromEnd=function(items,newArray){for(var i=NUMBER_OF_PAGES+1;i<items.length;i++){items[i]=newArray[i];}return items;};this._mergeArraysFromTop=function(items,newArray){for(var i=0;i<NUMBER_OF_PAGES;i++){items[i]=newArray[i];}return items;};this._getItemsForPage=function(page,items){if(_this._isLastPage(page,items)){return _this._getNextPageItems(items);}else if(_this._isFirstPage(page)){return _this._getFirstPageItems(items);}return items;};}_createClass(Presenter,[{key:\"getDate\",value:function getDate(_ref3,weekIndex){var current=_ref3.current,context=_ref3.context,_ref3$firstDay=_ref3.firstDay,firstDay=_ref3$firstDay===void 0?0:_ref3$firstDay;var d=new XDate(current||context.date);var dayOfTheWeek=d.getDay();if(dayOfTheWeek<firstDay&&firstDay>0){dayOfTheWeek=7+dayOfTheWeek;}var dd=weekIndex===0?d:d.addDays(firstDay-dayOfTheWeek);var newDate=dd.addWeeks(weekIndex);return toMarkingFormat(newDate);}}]);return Presenter;}();export default Presenter;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/presenter.js"],"names":["XDate","React","toMarkingFormat","constants","commons","require","updateSources","UpdateSources","NUMBER_OF_PAGES","Presenter","_applyAndroidRtlFix","isAndroid","isRTL","_firstAndroidRTLScrollIgnored","list","createRef","scrollToIndex","animated","current","index","onDayPress","context","value","setDate","dateString","DAY_PRESS","onScroll","updateState","x","page","items","width","_getX","length","newPage","_getNewPage","_shouldUpdateState","WEEK_SCROLL","data","_getItemsForPage","onMomentumScrollEnd","props","updateItems","_isFirstPage","_isLastPage","newWeekArray","getDatesArray","updatedItems","_mergeArraysFromEnd","_mergeArraysFromTop","shouldComponentUpdate","prevContext","date","updateSource","args","array","d","getDate","push","itemsCount","containerWidth","numberOfPages","overallWidth","Math","round","_getNextPageItems","map","_","i","_getFirstPageItems","newArray","weekIndex","firstDay","dayOfTheWeek","getDay","dd","addDays","newDate","addWeeks"],"mappings":"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","sourcesContent":["import XDate from 'xdate';\nimport React from 'react';\nimport { toMarkingFormat } from '../../interface';\nimport constants from '../../commons/constants';\nconst commons = require('../commons');\nconst updateSources = commons.UpdateSources;\n// must be a positive number\nconst NUMBER_OF_PAGES = 2;\nclass Presenter {\n    _applyAndroidRtlFix = constants.isAndroid && constants.isRTL;\n    // On Android+RTL there's an initial scroll that cause issues\n    _firstAndroidRTLScrollIgnored = !this._applyAndroidRtlFix;\n    list = React.createRef();\n    scrollToIndex = (animated) => {\n        this.list?.current?.scrollToIndex({ animated, index: NUMBER_OF_PAGES });\n    };\n    // Events\n    onDayPress = (context, value) => {\n        context.setDate?.(value.dateString, updateSources.DAY_PRESS);\n    };\n    onScroll = ({ context, updateState, x, page, items, width }) => {\n        if (!this._firstAndroidRTLScrollIgnored) {\n            this._firstAndroidRTLScrollIgnored = true;\n            return;\n        }\n        x = this._getX(x, items?.length, width);\n        const newPage = this._getNewPage(x, width);\n        if (this._shouldUpdateState(page, newPage)) {\n            context.setDate?.(items[newPage], updateSources.WEEK_SCROLL);\n            const data = this._getItemsForPage(newPage, items);\n            updateState(data, newPage);\n        }\n    };\n    onMomentumScrollEnd = ({ items, props, page, updateItems }) => {\n        if (this._isFirstPage(page) || this._isLastPage(page, items)) {\n            this.scrollToIndex(false);\n            const newWeekArray = this.getDatesArray(props);\n            let updatedItems;\n            if (this._isLastPage(page, items)) {\n                updatedItems = this._mergeArraysFromEnd(items, newWeekArray);\n            }\n            else {\n                updatedItems = this._mergeArraysFromTop(items, newWeekArray);\n            }\n            updateItems(updatedItems);\n        }\n    };\n    shouldComponentUpdate = (context, prevContext) => {\n        const { date, updateSource } = context;\n        return (date !== prevContext.date &&\n            updateSource !== updateSources.WEEK_SCROLL);\n    };\n    getDate({ current, context, firstDay = 0 }, weekIndex) {\n        const d = new XDate(current || context.date);\n        // get the first day of the week as date (for the on scroll mark)\n        let dayOfTheWeek = d.getDay();\n        if (dayOfTheWeek < firstDay && firstDay > 0) {\n            dayOfTheWeek = 7 + dayOfTheWeek;\n        }\n        // leave the current date in the visible week as is\n        const dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n        const newDate = dd.addWeeks(weekIndex);\n        return toMarkingFormat(newDate);\n    }\n    getDatesArray = (args) => {\n        const array = [];\n        for (let index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n            const d = this.getDate(args, index);\n            array.push(d);\n        }\n        return array;\n    };\n    _shouldUpdateState = (page, newPage) => {\n        return page !== newPage;\n    };\n    _getX = (x, itemsCount, containerWidth) => {\n        if (this._applyAndroidRtlFix) {\n            const numberOfPages = itemsCount - 1;\n            const overallWidth = numberOfPages * containerWidth;\n            return overallWidth - x;\n        }\n        return x;\n    };\n    _getNewPage = (x, containerWidth) => {\n        return Math.round(x / containerWidth);\n    };\n    _isFirstPage = (page) => {\n        return page === 0;\n    };\n    _isLastPage = (page, items) => {\n        return page === items.length - 1;\n    };\n    _getNextPageItems = (items) => {\n        return items.map((_, i) => {\n            const index = i <= NUMBER_OF_PAGES ? i + NUMBER_OF_PAGES : i;\n            return items[index];\n        });\n    };\n    _getFirstPageItems = (items) => {\n        return items.map((_, i) => {\n            const index = i >= NUMBER_OF_PAGES ? i - NUMBER_OF_PAGES : i;\n            return items[index];\n        });\n    };\n    _mergeArraysFromEnd = (items, newArray) => {\n        for (let i = NUMBER_OF_PAGES + 1; i < items.length; i++) {\n            items[i] = newArray[i];\n        }\n        return items;\n    };\n    _mergeArraysFromTop = (items, newArray) => {\n        for (let i = 0; i < NUMBER_OF_PAGES; i++) {\n            items[i] = newArray[i];\n        }\n        return items;\n    };\n    _getItemsForPage = (page, items) => {\n        if (this._isLastPage(page, items)) {\n            return this._getNextPageItems(items);\n        }\n        else if (this._isFirstPage(page)) {\n            return this._getFirstPageItems(items);\n        }\n        return items;\n    };\n}\nexport default Presenter;\n"]},"metadata":{},"sourceType":"module"}