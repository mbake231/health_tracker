{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import PropTypes from'prop-types';import XDate from'xdate';import React,{useMemo}from'react';import{formatNumbers,isToday}from\"../../dateutils\";import{getDefaultLocale}from\"../../services\";import{xdateToData}from\"../../interface\";import{SELECT_DATE_SLOT}from\"../../testIDs\";import BasicDay from\"./basic\";import PeriodDay from\"./period\";import{jsx as _jsx}from\"react/jsx-runtime\";var Day=React.memo(function(props){var date=props.date,marking=props.marking,dayComponent=props.dayComponent,markingType=props.markingType;var _date=date?new XDate(date):undefined;var _isToday=isToday(_date);var markingAccessibilityLabel=useMemo(function(){var label='';if(marking){if(marking.accessibilityLabel){return marking.accessibilityLabel;}if(marking.selected){label+='selected ';if(!marking.marked){label+='You have no entries for this day ';}}if(marking.marked){label+='You have entries for this day ';}if(marking.startingDay){label+='period start ';}if(marking.endingDay){label+='period end ';}if(marking.disabled||marking.disableTouchEvent){label+='disabled ';}}return label;},[marking]);var getAccessibilityLabel=useMemo(function(){var today=getDefaultLocale().today||'today';var formatAccessibilityLabel=getDefaultLocale().formatAccessibilityLabel||'dddd d MMMM yyyy';return(_isToday?today:'')+\" \"+(_date==null?void 0:_date.toString(formatAccessibilityLabel))+\" \"+markingAccessibilityLabel;},[_date,marking,_isToday]);var Component=dayComponent||(markingType==='period'?PeriodDay:BasicDay);var dayComponentProps=dayComponent?{date:xdateToData(date?new XDate(date):new XDate())}:undefined;return _jsx(Component,_objectSpread(_objectSpread(_objectSpread({},props),{},{accessibilityLabel:getAccessibilityLabel,testID:SELECT_DATE_SLOT+\"-\"+date},dayComponentProps),{},{children:formatNumbers(_date==null?void 0:_date.getDate())}));});export default Day;Day.displayName='Day';Day.propTypes=_objectSpread(_objectSpread({},BasicDay.propTypes),{},{dayComponent:PropTypes.any});","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/calendar/day/index.js"],"names":["PropTypes","XDate","React","useMemo","formatNumbers","isToday","getDefaultLocale","xdateToData","SELECT_DATE_SLOT","BasicDay","PeriodDay","Day","memo","props","date","marking","dayComponent","markingType","_date","undefined","_isToday","markingAccessibilityLabel","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","getAccessibilityLabel","today","formatAccessibilityLabel","toString","Component","dayComponentProps","getDate","displayName","propTypes","any"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { xdateToData } from '../../interface';\n// @ts-expect-error\nimport { SELECT_DATE_SLOT } from '../../testIDs';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\nconst Day = React.memo((props) => {\n    const { date, marking, dayComponent, markingType } = props;\n    const _date = date ? new XDate(date) : undefined;\n    const _isToday = isToday(_date);\n    const markingAccessibilityLabel = useMemo(() => {\n        let label = '';\n        if (marking) {\n            if (marking.accessibilityLabel) {\n                return marking.accessibilityLabel;\n            }\n            if (marking.selected) {\n                label += 'selected ';\n                if (!marking.marked) {\n                    label += 'You have no entries for this day ';\n                }\n            }\n            if (marking.marked) {\n                label += 'You have entries for this day ';\n            }\n            if (marking.startingDay) {\n                label += 'period start ';\n            }\n            if (marking.endingDay) {\n                label += 'period end ';\n            }\n            if (marking.disabled || marking.disableTouchEvent) {\n                label += 'disabled ';\n            }\n        }\n        return label;\n    }, [marking]);\n    const getAccessibilityLabel = useMemo(() => {\n        const today = getDefaultLocale().today || 'today';\n        const formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n        return `${_isToday ? today : ''} ${_date?.toString(formatAccessibilityLabel)} ${markingAccessibilityLabel}`;\n    }, [_date, marking, _isToday]);\n    const Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n    const dayComponentProps = dayComponent ? { date: xdateToData(date ? new XDate(date) : new XDate()) } : undefined;\n    return (\n    //@ts-expect-error\n    <Component {...props} accessibilityLabel={getAccessibilityLabel} testID={`${SELECT_DATE_SLOT}-${date}`} {...dayComponentProps}>\n      {formatNumbers(_date?.getDate())}\n    </Component>);\n});\nexport default Day;\nDay.displayName = 'Day';\nDay.propTypes = {\n    ...BasicDay.propTypes,\n    dayComponent: PropTypes.any\n};\n"]},"metadata":{},"sourceType":"module"}