{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"calendarStyle\",\"horizontal\",\"calendarWidth\",\"testID\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import PropTypes from'prop-types';import XDate from'xdate';import React,{Component}from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import View from\"react-native-web/dist/exports/View\";import{extractComponentProps}from\"../componentUpdater\";import{xdateToData,parseDate}from\"../interface\";import{page,sameDate,sameMonth}from\"../dateutils\";import{STATIC_HEADER}from\"../testIDs\";import styleConstructor from\"./style\";import Calendar from\"../calendar\";import CalendarListItem from\"./item\";import CalendarHeader from\"../calendar/header/index\";import constants from\"../commons/constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CALENDAR_WIDTH=constants.screenWidth;var CALENDAR_HEIGHT=360;var PAST_SCROLL_RANGE=50;var FUTURE_SCROLL_RANGE=50;var CalendarList=function(_Component){_inherits(CalendarList,_Component);var _super=_createSuper(CalendarList);function CalendarList(props){var _this;_classCallCheck(this,CalendarList);_this=_super.call(this,props);_this.list=React.createRef();_this.viewabilityConfig={itemVisiblePercentThreshold:20};_this.scrollToMonth=function(m){var _this$list,_this$list$current;var _this$props=_this.props,horizontal=_this$props.horizontal,_this$props$calendarH=_this$props.calendarHeight,calendarHeight=_this$props$calendarH===void 0?CALENDAR_HEIGHT:_this$props$calendarH,_this$props$calendarW=_this$props.calendarWidth,calendarWidth=_this$props$calendarW===void 0?CALENDAR_WIDTH:_this$props$calendarW,_this$props$pastScrol=_this$props.pastScrollRange,pastScrollRange=_this$props$pastScrol===void 0?PAST_SCROLL_RANGE:_this$props$pastScrol,_this$props$animateSc=_this$props.animateScroll,animateScroll=_this$props$animateSc===void 0?false:_this$props$animateSc;var month=parseDate(m);var scrollTo=month||_this.state.openDate;var diffMonths=Math.round(_this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));var size=horizontal?calendarWidth:calendarHeight;var scrollAmount=size*pastScrollRange+diffMonths*size;(_this$list=_this.list)==null?void 0:(_this$list$current=_this$list.current)==null?void 0:_this$list$current.scrollToOffset({offset:scrollAmount,animated:animateScroll});};_this.getItemLayout=function(_,index){var _this$props2=_this.props,horizontal=_this$props2.horizontal,_this$props2$calendar=_this$props2.calendarHeight,calendarHeight=_this$props2$calendar===void 0?CALENDAR_HEIGHT:_this$props2$calendar,_this$props2$calendar2=_this$props2.calendarWidth,calendarWidth=_this$props2$calendar2===void 0?CALENDAR_WIDTH:_this$props2$calendar2;var size=horizontal?calendarWidth:calendarHeight;return{length:size,offset:size*index,index:index};};_this.addMonth=function(count){_this.updateMonth(_this.state.currentMonth.clone().addMonths(count,true));};_this.onViewableItemsChanged=function(_ref){var viewableItems=_ref.viewableItems;function rowIsCloseToViewable(index,distance){for(var i=0;i<viewableItems.length;i++){if(Math.abs(index-parseInt(viewableItems[i].index))<=distance){return true;}}return false;}var rowclone=_this.state.rows;var newrows=[];var visibleMonths=[];for(var i=0;i<rowclone.length;i++){var val=rowclone[i];var rowShouldBeRendered=rowIsCloseToViewable(i,1);var _this$props$pastScrol2=_this.props.pastScrollRange,pastScrollRange=_this$props$pastScrol2===void 0?PAST_SCROLL_RANGE:_this$props$pastScrol2;if(rowShouldBeRendered&&!rowclone[i].getTime){val=_this.state.openDate.clone().addMonths(i-pastScrollRange,true);}else if(!rowShouldBeRendered){val=_this.state.texts[i];}newrows.push(val);if(rowIsCloseToViewable(i,0)){var v=val instanceof XDate?val:new XDate(val);visibleMonths.push(xdateToData(v));}}_this.props.onVisibleMonthsChange==null?void 0:_this.props.onVisibleMonthsChange(visibleMonths);_this.setState({rows:newrows,currentMonth:parseDate(visibleMonths[0])});};_this.renderItem=function(_ref2){var item=_ref2.item;var _this$props3=_this.props,calendarStyle=_this$props3.calendarStyle,horizontal=_this$props3.horizontal,calendarWidth=_this$props3.calendarWidth,testID=_this$props3.testID,others=_objectWithoutProperties(_this$props3,_excluded);return _jsx(CalendarListItem,_objectSpread(_objectSpread({},others),{},{item:item,testID:testID+\"_\"+item,style:calendarStyle,horizontal:horizontal,calendarWidth:horizontal?calendarWidth:undefined,scrollToMonth:_this.scrollToMonth}));};_this.style=styleConstructor(props.theme);var rows=[];var texts=[];var date=parseDate(props.current)||new XDate();var _props$pastScrollRang=props.pastScrollRange,_pastScrollRange=_props$pastScrollRang===void 0?PAST_SCROLL_RANGE:_props$pastScrollRang,_props$futureScrollRa=props.futureScrollRange,futureScrollRange=_props$futureScrollRa===void 0?FUTURE_SCROLL_RANGE:_props$futureScrollRa;for(var i=0;i<=_pastScrollRange+futureScrollRange;i++){var rangeDate=date.clone().addMonths(i-_pastScrollRange,true);var rangeDateStr=rangeDate.toString('MMM yyyy');texts.push(rangeDateStr);if(_pastScrollRange-1<=i&&i<=_pastScrollRange+1||!_pastScrollRange&&i<=_pastScrollRange+2){rows.push(rangeDate);}else{rows.push(rangeDateStr);}}_this.state={rows:rows,texts:texts,openDate:date,currentMonth:parseDate(props.current)};return _this;}_createClass(CalendarList,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var prevCurrent=parseDate(prevProps.current);var current=parseDate(this.props.current);if(current&&prevCurrent&&current.getTime()!==prevCurrent.getTime()){this.scrollToMonth(current);}}},{key:\"scrollToDay\",value:function scrollToDay(d,offset,animated){var _this$list2,_this$list2$current;var _this$props4=this.props,horizontal=_this$props4.horizontal,_this$props4$calendar=_this$props4.calendarHeight,calendarHeight=_this$props4$calendar===void 0?CALENDAR_HEIGHT:_this$props4$calendar,_this$props4$calendar2=_this$props4.calendarWidth,calendarWidth=_this$props4$calendar2===void 0?CALENDAR_WIDTH:_this$props4$calendar2,_this$props4$pastScro=_this$props4.pastScrollRange,pastScrollRange=_this$props4$pastScro===void 0?PAST_SCROLL_RANGE:_this$props4$pastScro,firstDay=_this$props4.firstDay;var day=parseDate(d);var diffMonths=Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));var size=horizontal?calendarWidth:calendarHeight;var scrollAmount=size*pastScrollRange+diffMonths*size+(offset||0);if(!horizontal){var week=0;var days=page(day,firstDay);for(var i=0;i<days.length;i++){week=Math.floor(i/7);if(sameDate(days[i],day)){scrollAmount+=46*week;break;}}}(_this$list2=this.list)==null?void 0:(_this$list2$current=_this$list2.current)==null?void 0:_this$list2$current.scrollToOffset({offset:scrollAmount,animated:animated});}},{key:\"getMonthIndex\",value:function getMonthIndex(month){var _this$props$pastScrol3=this.props.pastScrollRange,pastScrollRange=_this$props$pastScrol3===void 0?PAST_SCROLL_RANGE:_this$props$pastScrol3;var diffMonths=this.state.openDate.diffMonths(month)+pastScrollRange;return diffMonths;}},{key:\"updateMonth\",value:function updateMonth(day){var _this2=this;if(sameMonth(day,this.state.currentMonth)){return;}this.setState({currentMonth:day.clone()},function(){_this2.scrollToMonth(_this2.state.currentMonth);var currMont=_this2.state.currentMonth.clone();_this2.props.onMonthChange==null?void 0:_this2.props.onMonthChange(xdateToData(currMont));_this2.props.onVisibleMonthsChange==null?void 0:_this2.props.onVisibleMonthsChange([xdateToData(currMont)]);});}},{key:\"renderStaticHeader\",value:function renderStaticHeader(){var _this$props5=this.props,staticHeader=_this$props5.staticHeader,horizontal=_this$props5.horizontal,headerStyle=_this$props5.headerStyle;var useStaticHeader=staticHeader&&horizontal;var headerProps=extractComponentProps(CalendarHeader,this.props);if(useStaticHeader){return _jsx(CalendarHeader,_objectSpread(_objectSpread({},headerProps),{},{testID:STATIC_HEADER,style:[this.style.staticHeader,headerStyle],month:this.state.currentMonth,addMonth:this.addMonth,accessibilityElementsHidden:true,importantForAccessibility:'no-hide-descendants'}));}}},{key:\"render\",value:function render(){var _this$props6=this.props,style=_this$props6.style,pastScrollRange=_this$props6.pastScrollRange,futureScrollRange=_this$props6.futureScrollRange,horizontal=_this$props6.horizontal,showScrollIndicator=_this$props6.showScrollIndicator;return _jsxs(View,{style:this.style.flatListContainer,children:[_jsx(FlatList,{ref:this.list,style:[this.style.container,style],initialListSize:pastScrollRange+futureScrollRange+1,data:this.state.rows,renderItem:this.renderItem,getItemLayout:this.getItemLayout,onViewableItemsChanged:this.onViewableItemsChanged,viewabilityConfig:this.viewabilityConfig,initialScrollIndex:this.state.openDate?this.getMonthIndex(this.state.openDate):undefined,showsVerticalScrollIndicator:showScrollIndicator,showsHorizontalScrollIndicator:horizontal&&showScrollIndicator,testID:this.props.testID,onLayout:this.props.onLayout,removeClippedSubviews:this.props.removeClippedSubviews,pagingEnabled:this.props.pagingEnabled,scrollEnabled:this.props.scrollEnabled,scrollsToTop:this.props.scrollsToTop,horizontal:this.props.horizontal,keyboardShouldPersistTaps:this.props.keyboardShouldPersistTaps,keyExtractor:this.props.keyExtractor,onEndReachedThreshold:this.props.onEndReachedThreshold,onEndReached:this.props.onEndReached}),this.renderStaticHeader()]});}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(_,prevState){var rowClone=prevState.rows;var newRows=[];for(var i=0;i<rowClone.length;i++){var val=prevState.texts[i];if(rowClone[i].getTime){val=rowClone[i].clone();val.propBump=rowClone[i].propBump?rowClone[i].propBump+1:1;}newRows.push(val);}return{rows:newRows};}}]);return CalendarList;}(Component);CalendarList.displayName='CalendarList';CalendarList.propTypes=_objectSpread(_objectSpread({},Calendar.propTypes),{},{pastScrollRange:PropTypes.number,futureScrollRange:PropTypes.number,calendarWidth:PropTypes.number,calendarHeight:PropTypes.number,calendarStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.number,PropTypes.array]),staticHeader:PropTypes.bool,showScrollIndicator:PropTypes.bool,animateScroll:PropTypes.bool,scrollEnabled:PropTypes.bool,scrollsToTop:PropTypes.bool,pagingEnabled:PropTypes.bool,horizontal:PropTypes.bool,keyboardShouldPersistTaps:PropTypes.oneOf(['never','always','handled']),keyExtractor:PropTypes.func,onEndReachedThreshold:PropTypes.number,onEndReached:PropTypes.func});CalendarList.defaultProps={calendarWidth:CALENDAR_WIDTH,calendarHeight:CALENDAR_HEIGHT,pastScrollRange:PAST_SCROLL_RANGE,futureScrollRange:FUTURE_SCROLL_RANGE,showScrollIndicator:false,horizontal:false,scrollsToTop:false,scrollEnabled:true,removeClippedSubviews:constants.isAndroid,keyExtractor:function keyExtractor(_,index){return String(index);}};export default CalendarList;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/calendar-list/index.js"],"names":["PropTypes","XDate","React","Component","extractComponentProps","xdateToData","parseDate","page","sameDate","sameMonth","STATIC_HEADER","styleConstructor","Calendar","CalendarListItem","CalendarHeader","constants","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","list","createRef","viewabilityConfig","itemVisiblePercentThreshold","scrollToMonth","m","horizontal","calendarHeight","calendarWidth","pastScrollRange","animateScroll","month","scrollTo","state","openDate","diffMonths","Math","round","clone","setDate","size","scrollAmount","current","scrollToOffset","offset","animated","getItemLayout","_","index","length","addMonth","count","updateMonth","currentMonth","addMonths","onViewableItemsChanged","viewableItems","rowIsCloseToViewable","distance","i","abs","parseInt","rowclone","rows","newrows","visibleMonths","val","rowShouldBeRendered","getTime","texts","push","v","onVisibleMonthsChange","setState","renderItem","item","calendarStyle","testID","others","undefined","style","theme","date","futureScrollRange","rangeDate","rangeDateStr","toString","prevProps","prevCurrent","d","firstDay","day","week","days","floor","currMont","onMonthChange","staticHeader","headerStyle","useStaticHeader","headerProps","showScrollIndicator","flatListContainer","container","getMonthIndex","onLayout","removeClippedSubviews","pagingEnabled","scrollEnabled","scrollsToTop","keyboardShouldPersistTaps","keyExtractor","onEndReachedThreshold","onEndReached","renderStaticHeader","prevState","rowClone","newRows","propBump","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func","defaultProps","isAndroid","String"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractComponentProps } from '../componentUpdater';\nimport { xdateToData, parseDate } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { STATIC_HEADER } from '../testIDs';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport constants from '../commons/constants';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nclass CalendarList extends Component {\n    static displayName = 'CalendarList';\n    static propTypes = {\n        ...Calendar.propTypes,\n        pastScrollRange: PropTypes.number,\n        futureScrollRange: PropTypes.number,\n        calendarWidth: PropTypes.number,\n        calendarHeight: PropTypes.number,\n        calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        staticHeader: PropTypes.bool,\n        showScrollIndicator: PropTypes.bool,\n        animateScroll: PropTypes.bool,\n        scrollEnabled: PropTypes.bool,\n        scrollsToTop: PropTypes.bool,\n        pagingEnabled: PropTypes.bool,\n        horizontal: PropTypes.bool,\n        keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n        keyExtractor: PropTypes.func,\n        onEndReachedThreshold: PropTypes.number,\n        onEndReached: PropTypes.func\n    };\n    static defaultProps = {\n        calendarWidth: CALENDAR_WIDTH,\n        calendarHeight: CALENDAR_HEIGHT,\n        pastScrollRange: PAST_SCROLL_RANGE,\n        futureScrollRange: FUTURE_SCROLL_RANGE,\n        showScrollIndicator: false,\n        horizontal: false,\n        scrollsToTop: false,\n        scrollEnabled: true,\n        removeClippedSubviews: constants.isAndroid,\n        keyExtractor: (_, index) => String(index)\n    };\n    style;\n    list = React.createRef();\n    viewabilityConfig = {\n        itemVisiblePercentThreshold: 20\n    };\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const rows = [];\n        const texts = [];\n        const date = parseDate(props.current) || new XDate();\n        const { pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE } = props;\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = date.clone().addMonths(i - pastScrollRange, true);\n            const rangeDateStr = rangeDate.toString('MMM yyyy');\n            texts.push(rangeDateStr);\n            /*\n             * This selects range around current shown month [-0, +2] or [-1, +1] month for detail calendar rendering.\n             * If `this.pastScrollRange` is `undefined` it's equal to `false` or 0 in next condition.\n             */\n            if ((pastScrollRange - 1 <= i && i <= pastScrollRange + 1) ||\n                (!pastScrollRange && i <= pastScrollRange + 2)) {\n                rows.push(rangeDate);\n            }\n            else {\n                rows.push(rangeDateStr);\n            }\n        }\n        this.state = {\n            rows,\n            texts,\n            openDate: date,\n            currentMonth: parseDate(props.current)\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const prevCurrent = parseDate(prevProps.current);\n        const current = parseDate(this.props.current);\n        if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n            this.scrollToMonth(current);\n        }\n    }\n    static getDerivedStateFromProps(_, prevState) {\n        const rowClone = prevState.rows;\n        const newRows = [];\n        for (let i = 0; i < rowClone.length; i++) {\n            let val = prevState.texts[i];\n            // @ts-expect-error\n            if (rowClone[i].getTime) {\n                val = rowClone[i].clone();\n                // @ts-expect-error\n                val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n            }\n            newRows.push(val);\n        }\n        return { rows: newRows };\n    }\n    scrollToDay(d, offset, animated) {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, firstDay } = this.props;\n        const day = parseDate(d);\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        let scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(day, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], day)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n    }\n    scrollToMonth = (m) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, animateScroll = false } = this.props;\n        const month = parseDate(m);\n        const scrollTo = month || this.state.openDate;\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        const scrollAmount = size * pastScrollRange + diffMonths * size;\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n    };\n    getItemLayout = (_, index) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH } = this.props;\n        const size = horizontal ? calendarWidth : calendarHeight;\n        return {\n            length: size,\n            offset: size * index,\n            index\n        };\n    };\n    getMonthIndex(month) {\n        const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n        const diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n        return diffMonths;\n    }\n    addMonth = (count) => {\n        this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    };\n    updateMonth(day) {\n        if (sameMonth(day, this.state.currentMonth)) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            this.scrollToMonth(this.state.currentMonth);\n            const currMont = this.state.currentMonth.clone();\n            this.props.onMonthChange?.(xdateToData(currMont));\n            this.props.onVisibleMonthsChange?.([xdateToData(currMont)]);\n        });\n    }\n    onViewableItemsChanged = ({ viewableItems }) => {\n        function rowIsCloseToViewable(index, distance) {\n            for (let i = 0; i < viewableItems.length; i++) {\n                if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const rowclone = this.state.rows;\n        const newrows = [];\n        const visibleMonths = [];\n        for (let i = 0; i < rowclone.length; i++) {\n            let val = rowclone[i];\n            const rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n            const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n            if (rowShouldBeRendered && !rowclone[i].getTime) {\n                val = this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n            }\n            else if (!rowShouldBeRendered) {\n                val = this.state.texts[i];\n            }\n            newrows.push(val);\n            if (rowIsCloseToViewable(i, 0)) {\n                const v = (val instanceof XDate) ? val : new XDate(val);\n                visibleMonths.push(xdateToData(v));\n            }\n        }\n        this.props.onVisibleMonthsChange?.(visibleMonths);\n        this.setState({\n            // @ts-expect-error\n            rows: newrows,\n            currentMonth: parseDate(visibleMonths[0])\n        });\n    };\n    renderItem = ({ item }) => {\n        const { calendarStyle, horizontal, calendarWidth, testID, ...others } = this.props;\n        return (<CalendarListItem {...others} item={item} testID={`${testID}_${item}`} style={calendarStyle} horizontal={horizontal} calendarWidth={horizontal ? calendarWidth : undefined} scrollToMonth={this.scrollToMonth}/>);\n    };\n    renderStaticHeader() {\n        const { staticHeader, horizontal, headerStyle } = this.props;\n        const useStaticHeader = staticHeader && horizontal;\n        const headerProps = extractComponentProps(CalendarHeader, this.props);\n        if (useStaticHeader) {\n            return (<CalendarHeader {...headerProps} testID={STATIC_HEADER} style={[this.style.staticHeader, headerStyle]} month={this.state.currentMonth} addMonth={this.addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    }\n    render() {\n        const { style, pastScrollRange, futureScrollRange, horizontal, showScrollIndicator } = this.props;\n        return (<View style={this.style.flatListContainer}>\n        <FlatList ref={this.list} style={[this.style.container, style]} \n        // @ts-expect-error\n        initialListSize={pastScrollRange + futureScrollRange + 1} // ListView deprecated\n         data={this.state.rows} renderItem={this.renderItem} getItemLayout={this.getItemLayout} onViewableItemsChanged={this.onViewableItemsChanged} viewabilityConfig={this.viewabilityConfig} initialScrollIndex={this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={horizontal && showScrollIndicator} testID={this.props.testID} onLayout={this.props.onLayout} removeClippedSubviews={this.props.removeClippedSubviews} pagingEnabled={this.props.pagingEnabled} scrollEnabled={this.props.scrollEnabled} scrollsToTop={this.props.scrollsToTop} horizontal={this.props.horizontal} keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps} keyExtractor={this.props.keyExtractor} onEndReachedThreshold={this.props.onEndReachedThreshold} onEndReached={this.props.onEndReached}/>\n        {this.renderStaticHeader()}\n      </View>);\n    }\n}\nexport default CalendarList;\n"]},"metadata":{},"sourceType":"module"}