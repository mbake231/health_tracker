{"ast":null,"code":"import{isUndefined,isDate,isString,isNumber}from'lodash';import XDate from'xdate';var _require=require(\"../interface\"),padNumber=_require.padNumber,toMarkingFormat=_require.toMarkingFormat;export function getCalendarDateString(date){if(!isUndefined(date)){if(isDate(date)&&!isNaN(date.getFullYear())){return date.getFullYear()+'-'+padNumber(date.getMonth()+1)+'-'+padNumber(date.getDate());}else if(isString(date)){return toMarkingFormat(new XDate(date,false));}else if(isNumber(date)){return toMarkingFormat(new XDate(date,true));}throw'Invalid Date';}}export function getDefaultLocale(){return XDate.locales[XDate.defaultLocale];}export default{getCalendarDateString:getCalendarDateString,getDefaultLocale:getDefaultLocale};","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/services/index.js"],"names":["isUndefined","isDate","isString","isNumber","XDate","require","padNumber","toMarkingFormat","getCalendarDateString","date","isNaN","getFullYear","getMonth","getDate","getDefaultLocale","locales","defaultLocale"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,MAAtB,CAA8BC,QAA9B,CAAwCC,QAAxC,KAAwD,QAAxD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,aAAuCC,OAAO,gBAA9C,CAAQC,SAAR,UAAQA,SAAR,CAAmBC,eAAnB,UAAmBA,eAAnB,CACA,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,IAA/B,CAAqC,CACxC,GAAI,CAACT,WAAW,CAACS,IAAD,CAAhB,CAAwB,CACpB,GAAIR,MAAM,CAACQ,IAAD,CAAN,EAAgB,CAACC,KAAK,CAACD,IAAI,CAACE,WAAL,EAAD,CAA1B,CAAgD,CAC5C,MAAOF,CAAAA,IAAI,CAACE,WAAL,GAAqB,GAArB,CAA2BL,SAAS,CAACG,IAAI,CAACG,QAAL,GAAkB,CAAnB,CAApC,CAA4D,GAA5D,CAAkEN,SAAS,CAACG,IAAI,CAACI,OAAL,EAAD,CAAlF,CACH,CAFD,IAGK,IAAIX,QAAQ,CAACO,IAAD,CAAZ,CAAoB,CAErB,MAAOF,CAAAA,eAAe,CAAC,GAAIH,CAAAA,KAAJ,CAAUK,IAAV,CAAgB,KAAhB,CAAD,CAAtB,CACH,CAHI,IAIA,IAAIN,QAAQ,CAACM,IAAD,CAAZ,CAAoB,CACrB,MAAOF,CAAAA,eAAe,CAAC,GAAIH,CAAAA,KAAJ,CAAUK,IAAV,CAAgB,IAAhB,CAAD,CAAtB,CACH,CACD,KAAM,cAAN,CACH,CACJ,CACD,MAAO,SAASK,CAAAA,gBAAT,EAA4B,CAC/B,MAAOV,CAAAA,KAAK,CAACW,OAAN,CAAcX,KAAK,CAACY,aAApB,CAAP,CACH,CACD,cAAe,CACXR,qBAAqB,CAArBA,qBADW,CAEXM,gBAAgB,CAAhBA,gBAFW,CAAf","sourcesContent":["import { isUndefined, isDate, isString, isNumber } from 'lodash';\nimport XDate from 'xdate';\nconst { padNumber, toMarkingFormat } = require('../interface');\nexport function getCalendarDateString(date) {\n    if (!isUndefined(date)) {\n        if (isDate(date) && !isNaN(date.getFullYear())) {\n            return date.getFullYear() + '-' + padNumber(date.getMonth() + 1) + '-' + padNumber(date.getDate());\n        }\n        else if (isString(date)) {\n            // issue with strings and XDate's utc-mode - returns one day before\n            return toMarkingFormat(new XDate(date, false));\n        }\n        else if (isNumber(date)) {\n            return toMarkingFormat(new XDate(date, true));\n        }\n        throw 'Invalid Date';\n    }\n}\nexport function getDefaultLocale() {\n    return XDate.locales[XDate.defaultLocale];\n}\nexport default {\n    getCalendarDateString,\n    getDefaultLocale\n};\n"]},"metadata":{},"sourceType":"module"}