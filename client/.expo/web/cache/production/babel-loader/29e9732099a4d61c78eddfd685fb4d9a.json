{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import*as defaultStyle from\"../style\";import platformStyles from\"./platform-style\";export default function styleConstructor(){var theme=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var appStyle=_objectSpread(_objectSpread({},defaultStyle),theme);var _platformStyles=platformStyles(appStyle),knob=_platformStyles.knob,weekdays=_platformStyles.weekdays;return StyleSheet.create(_objectSpread({container:{flex:1,overflow:'hidden'},animatedContainer:{flex:1},knob:knob,weekdays:weekdays,header:{overflow:'hidden',justifyContent:'flex-end',position:'absolute',height:'100%',width:'100%'},knobContainer:{flex:1,position:'absolute',left:0,right:0,height:24,bottom:0,alignItems:'center',backgroundColor:appStyle.calendarBackground},dayHeader:{width:32,textAlign:'center',fontSize:appStyle.textDayHeaderFontSize,fontFamily:appStyle.textDayHeaderFontFamily,fontWeight:appStyle.textDayHeaderFontWeight,color:appStyle.textSectionTitleColor},reservations:{flex:1,marginTop:104,backgroundColor:appStyle.backgroundColor},scrollPadStyle:{position:'absolute',width:'100%',alignSelf:'center'}},theme['stylesheet.agenda.main']||{}));}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/agenda/style.js"],"names":["defaultStyle","platformStyles","styleConstructor","theme","appStyle","knob","weekdays","StyleSheet","create","container","flex","overflow","animatedContainer","header","justifyContent","position","height","width","knobContainer","left","right","bottom","alignItems","backgroundColor","calendarBackground","dayHeader","textAlign","fontSize","textDayHeaderFontSize","fontFamily","textDayHeaderFontFamily","fontWeight","textDayHeaderFontWeight","color","textSectionTitleColor","reservations","marginTop","scrollPadStyle","alignSelf"],"mappings":"y4BACA,MAAO,GAAKA,CAAAA,YAAZ,gBACA,MAAOC,CAAAA,cAAP,wBACA,cAAe,SAASC,CAAAA,gBAAT,EAAsC,IAAZC,CAAAA,KAAY,2DAAJ,EAAI,CACjD,GAAMC,CAAAA,QAAQ,gCAAQJ,YAAR,EAAyBG,KAAzB,CAAd,CACA,oBAA2BF,cAAc,CAACG,QAAD,CAAzC,CAAQC,IAAR,iBAAQA,IAAR,CAAcC,QAAd,iBAAcA,QAAd,CACA,MAAOC,CAAAA,UAAU,CAACC,MAAX,gBACHC,SAAS,CAAE,CACPC,IAAI,CAAE,CADC,CAEPC,QAAQ,CAAE,QAFH,CADR,CAKHC,iBAAiB,CAAE,CACfF,IAAI,CAAE,CADS,CALhB,CAQHL,IAAI,CAAJA,IARG,CASHC,QAAQ,CAARA,QATG,CAUHO,MAAM,CAAE,CACJF,QAAQ,CAAE,QADN,CAEJG,cAAc,CAAE,UAFZ,CAGJC,QAAQ,CAAE,UAHN,CAIJC,MAAM,CAAE,MAJJ,CAKJC,KAAK,CAAE,MALH,CAVL,CAiBHC,aAAa,CAAE,CACXR,IAAI,CAAE,CADK,CAEXK,QAAQ,CAAE,UAFC,CAGXI,IAAI,CAAE,CAHK,CAIXC,KAAK,CAAE,CAJI,CAKXJ,MAAM,CAAE,EALG,CAMXK,MAAM,CAAE,CANG,CAOXC,UAAU,CAAE,QAPD,CAQXC,eAAe,CAAEnB,QAAQ,CAACoB,kBARf,CAjBZ,CA2BHC,SAAS,CAAE,CACPR,KAAK,CAAE,EADA,CAEPS,SAAS,CAAE,QAFJ,CAGPC,QAAQ,CAAEvB,QAAQ,CAACwB,qBAHZ,CAIPC,UAAU,CAAEzB,QAAQ,CAAC0B,uBAJd,CAKPC,UAAU,CAAE3B,QAAQ,CAAC4B,uBALd,CAMPC,KAAK,CAAE7B,QAAQ,CAAC8B,qBANT,CA3BR,CAmCHC,YAAY,CAAE,CACVzB,IAAI,CAAE,CADI,CAEV0B,SAAS,CAAE,GAFD,CAGVb,eAAe,CAAEnB,QAAQ,CAACmB,eAHhB,CAnCX,CAwCHc,cAAc,CAAE,CACZtB,QAAQ,CAAE,UADE,CAEZE,KAAK,CAAE,MAFK,CAGZqB,SAAS,CAAE,QAHC,CAxCb,EA8CCnC,KAAK,CAAC,wBAAD,CAAL,EAAmC,EA9CpC,EAAP,CAgDH","sourcesContent":["import { StyleSheet } from 'react-native';\nimport * as defaultStyle from '../style';\nimport platformStyles from './platform-style';\nexport default function styleConstructor(theme = {}) {\n    const appStyle = { ...defaultStyle, ...theme };\n    const { knob, weekdays } = platformStyles(appStyle);\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            overflow: 'hidden'\n        },\n        animatedContainer: {\n            flex: 1\n        },\n        knob,\n        weekdays,\n        header: {\n            overflow: 'hidden',\n            justifyContent: 'flex-end',\n            position: 'absolute',\n            height: '100%',\n            width: '100%'\n        },\n        knobContainer: {\n            flex: 1,\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            height: 24,\n            bottom: 0,\n            alignItems: 'center',\n            backgroundColor: appStyle.calendarBackground\n        },\n        dayHeader: {\n            width: 32,\n            textAlign: 'center',\n            fontSize: appStyle.textDayHeaderFontSize,\n            fontFamily: appStyle.textDayHeaderFontFamily,\n            fontWeight: appStyle.textDayHeaderFontWeight,\n            color: appStyle.textSectionTitleColor\n        },\n        reservations: {\n            flex: 1,\n            marginTop: 104,\n            backgroundColor: appStyle.backgroundColor\n        },\n        scrollPadStyle: {\n            position: 'absolute',\n            width: '100%',\n            alignSelf: 'center'\n        },\n        // @ts-expect-error\n        ...(theme['stylesheet.agenda.main'] || {})\n    });\n}\n"]},"metadata":{},"sourceType":"module"}