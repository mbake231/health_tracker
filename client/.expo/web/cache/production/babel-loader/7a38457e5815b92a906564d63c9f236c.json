{"ast":null,"code":"var get=require('lodash/get');var omit=require('lodash/omit');var pickBy=require('lodash/pickBy');var isEqual=require('lodash/isEqual');var includes=require('lodash/includes');export function shouldUpdate(props,newProps,paths){for(var i=0;i<paths.length;i++){var equals=isEqual(get(props,paths[i]),get(newProps,paths[i]));if(!equals){return true;}}return false;}export function extractComponentProps(component,props,ignoreProps){var componentPropTypes=component.propTypes;if(componentPropTypes){var keys=Object.keys(componentPropTypes);var componentProps=omit(pickBy(props,function(_value,key){return includes(keys,key);}),ignoreProps);return componentProps;}return{};}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/componentUpdater.js"],"names":["get","require","omit","pickBy","isEqual","includes","shouldUpdate","props","newProps","paths","i","length","equals","extractComponentProps","component","ignoreProps","componentPropTypes","propTypes","keys","Object","componentProps","_value","key"],"mappings":"AAAA,GAAMA,CAAAA,GAAG,CAAGC,OAAO,CAAC,YAAD,CAAnB,CACA,GAAMC,CAAAA,IAAI,CAAGD,OAAO,CAAC,aAAD,CAApB,CACA,GAAME,CAAAA,MAAM,CAAGF,OAAO,CAAC,eAAD,CAAtB,CACA,GAAMG,CAAAA,OAAO,CAAGH,OAAO,CAAC,gBAAD,CAAvB,CACA,GAAMI,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,iBAAD,CAAxB,CACA,MAAO,SAASK,CAAAA,YAAT,CAAsBC,KAAtB,CAA6BC,QAA7B,CAAuCC,KAAvC,CAA8C,CACjD,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,KAAK,CAACE,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,GAAME,CAAAA,MAAM,CAAGR,OAAO,CAACJ,GAAG,CAACO,KAAD,CAAQE,KAAK,CAACC,CAAD,CAAb,CAAJ,CAAuBV,GAAG,CAACQ,QAAD,CAAWC,KAAK,CAACC,CAAD,CAAhB,CAA1B,CAAtB,CACA,GAAI,CAACE,MAAL,CAAa,CACT,MAAO,KAAP,CACH,CACJ,CACD,MAAO,MAAP,CACH,CACD,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,SAA/B,CAA0CP,KAA1C,CAAiDQ,WAAjD,CAA8D,CACjE,GAAMC,CAAAA,kBAAkB,CAAGF,SAAS,CAACG,SAArC,CACA,GAAID,kBAAJ,CAAwB,CACpB,GAAME,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYF,kBAAZ,CAAb,CACA,GAAMI,CAAAA,cAAc,CAAGlB,IAAI,CAACC,MAAM,CAACI,KAAD,CAAQ,SAACc,MAAD,CAASC,GAAT,QAAiBjB,CAAAA,QAAQ,CAACa,IAAD,CAAOI,GAAP,CAAzB,EAAR,CAAP,CAAsDP,WAAtD,CAA3B,CACA,MAAOK,CAAAA,cAAP,CACH,CACD,MAAO,EAAP,CACH","sourcesContent":["const get = require('lodash/get');\nconst omit = require('lodash/omit');\nconst pickBy = require('lodash/pickBy');\nconst isEqual = require('lodash/isEqual');\nconst includes = require('lodash/includes');\nexport function shouldUpdate(props, newProps, paths) {\n    for (let i = 0; i < paths.length; i++) {\n        const equals = isEqual(get(props, paths[i]), get(newProps, paths[i]));\n        if (!equals) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function extractComponentProps(component, props, ignoreProps) {\n    const componentPropTypes = component.propTypes;\n    if (componentPropTypes) {\n        const keys = Object.keys(componentPropTypes);\n        const componentProps = omit(pickBy(props, (_value, key) => includes(keys, key)), ignoreProps);\n        return componentProps;\n    }\n    return {};\n}\n"]},"metadata":{},"sourceType":"module"}