{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";export var VelocityTracker=function(){function VelocityTracker(){_classCallCheck(this,VelocityTracker);this.history=[];this.lastPosition=undefined;this.lastTimestamp=undefined;}_createClass(VelocityTracker,[{key:\"add\",value:function add(position){var timestamp=new Date().valueOf();if(this.lastPosition&&this.lastTimestamp&&timestamp>this.lastTimestamp){var diff=position-this.lastPosition;if(diff>0.001||diff<-0.001){this.history.push(diff/(timestamp-this.lastTimestamp));}}this.lastPosition=position;this.lastTimestamp=timestamp;}},{key:\"estimateSpeed\",value:function estimateSpeed(){var finalTrend=this.history.slice(-3);var sum=finalTrend.reduce(function(r,v){return r+v;},0);return sum/finalTrend.length;}},{key:\"reset\",value:function reset(){this.history=[];this.lastPosition=undefined;this.lastTimestamp=undefined;}}]);return VelocityTracker;}();","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/velocityTracker.js"],"names":["VelocityTracker","history","lastPosition","undefined","lastTimestamp","position","timestamp","Date","valueOf","diff","push","finalTrend","slice","sum","reduce","r","v","length"],"mappings":"gIAAA,UAAaA,CAAAA,eAAb,YAII,0BAAc,uCACV,KAAKC,OAAL,CAAe,EAAf,CACA,KAAKC,YAAL,CAAoBC,SAApB,CACA,KAAKC,aAAL,CAAqBD,SAArB,CACH,CARL,+CASI,aAAIE,QAAJ,CAAc,CACV,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAlB,CACA,GAAI,KAAKN,YAAL,EAAqB,KAAKE,aAA1B,EAA2CE,SAAS,CAAG,KAAKF,aAAhE,CAA+E,CAC3E,GAAMK,CAAAA,IAAI,CAAGJ,QAAQ,CAAG,KAAKH,YAA7B,CACA,GAAIO,IAAI,CAAG,KAAP,EAAgBA,IAAI,CAAG,CAAC,KAA5B,CAAmC,CAC/B,KAAKR,OAAL,CAAaS,IAAb,CAAkBD,IAAI,EAAIH,SAAS,CAAG,KAAKF,aAArB,CAAtB,EACH,CACJ,CACD,KAAKF,YAAL,CAAoBG,QAApB,CACA,KAAKD,aAAL,CAAqBE,SAArB,CACH,CAnBL,6BAoBI,wBAAgB,CACZ,GAAMK,CAAAA,UAAU,CAAG,KAAKV,OAAL,CAAaW,KAAb,CAAmB,CAAC,CAApB,CAAnB,CACA,GAAMC,CAAAA,GAAG,CAAGF,UAAU,CAACG,MAAX,CAAkB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAlB,CAAmC,CAAnC,CAAZ,CACA,MAAOH,CAAAA,GAAG,CAAGF,UAAU,CAACM,MAAxB,CACH,CAxBL,qBAyBI,gBAAQ,CACJ,KAAKhB,OAAL,CAAe,EAAf,CACA,KAAKC,YAAL,CAAoBC,SAApB,CACA,KAAKC,aAAL,CAAqBD,SAArB,CACH,CA7BL","sourcesContent":["export class VelocityTracker {\n    history;\n    lastPosition;\n    lastTimestamp;\n    constructor() {\n        this.history = [];\n        this.lastPosition = undefined;\n        this.lastTimestamp = undefined;\n    }\n    add(position) {\n        const timestamp = new Date().valueOf();\n        if (this.lastPosition && this.lastTimestamp && timestamp > this.lastTimestamp) {\n            const diff = position - this.lastPosition;\n            if (diff > 0.001 || diff < -0.001) {\n                this.history.push(diff / (timestamp - this.lastTimestamp));\n            }\n        }\n        this.lastPosition = position;\n        this.lastTimestamp = timestamp;\n    }\n    estimateSpeed() {\n        const finalTrend = this.history.slice(-3);\n        const sum = finalTrend.reduce((r, v) => r + v, 0);\n        return sum / finalTrend.length;\n    }\n    reset() {\n        this.history = [];\n        this.lastPosition = undefined;\n        this.lastTimestamp = undefined;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}