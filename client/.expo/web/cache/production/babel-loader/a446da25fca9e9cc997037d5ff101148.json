{"ast":null,"code":"import React,{useCallback,useMemo,useRef}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import range from'lodash/range';import{buildUnavailableHoursBlocks,HOUR_BLOCK_HEIGHT}from\"./Packer\";import{buildTimeString,calcTimeByPosition}from\"./helpers/presenter\";import constants from\"../commons/constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var dimensionWidth=constants.screenWidth;var EVENT_DIFF=20;var TimelineHours=function TimelineHours(props){var format24h=props.format24h,_props$start=props.start,start=_props$start===void 0?0:_props$start,_props$end=props.end,end=_props$end===void 0?24:_props$end,date=props.date,unavailableHours=props.unavailableHours,unavailableHoursColor=props.unavailableHoursColor,styles=props.styles,onBackgroundLongPress=props.onBackgroundLongPress,onBackgroundLongPressOut=props.onBackgroundLongPressOut;var lastLongPressEventTime=useRef();var offset=HOUR_BLOCK_HEIGHT;var unavailableHoursBlocks=buildUnavailableHoursBlocks(unavailableHours,{dayStart:start,dayEnd:end});var hours=useMemo(function(){return range(start,end+1).map(function(i){var timeText;if(i===start){timeText='';}else if(i<12){timeText=!format24h?i+\" AM\":i+\":00\";}else if(i===12){timeText=!format24h?i+\" PM\":i+\":00\";}else if(i===24){timeText=!format24h?'12 AM':'23:59';}else{timeText=!format24h?i-12+\" PM\":i+\":00\";}return{timeText:timeText,time:i};});},[start,end,format24h]);var handleBackgroundPress=useCallback(function(event){var yPosition=event.nativeEvent.locationY;var _calcTimeByPosition=calcTimeByPosition(yPosition,HOUR_BLOCK_HEIGHT),hour=_calcTimeByPosition.hour,minutes=_calcTimeByPosition.minutes;lastLongPressEventTime.current={hour:hour,minutes:minutes,date:date};var timeString=buildTimeString(hour,minutes,date);onBackgroundLongPress==null?void 0:onBackgroundLongPress(timeString,lastLongPressEventTime.current);},[onBackgroundLongPress,date]);var handlePressOut=useCallback(function(){if(lastLongPressEventTime.current){var _lastLongPressEventTi=lastLongPressEventTime.current,hour=_lastLongPressEventTi.hour,minutes=_lastLongPressEventTi.minutes,_date=_lastLongPressEventTi.date;var timeString=buildTimeString(hour,minutes,_date);onBackgroundLongPressOut==null?void 0:onBackgroundLongPressOut(timeString,lastLongPressEventTime.current);lastLongPressEventTime.current=undefined;}},[onBackgroundLongPressOut,date]);return _jsxs(_Fragment,{children:[_jsx(TouchableWithoutFeedback,{onLongPress:handleBackgroundPress,onPressOut:handlePressOut,children:_jsx(View,{style:StyleSheet.absoluteFillObject})}),unavailableHoursBlocks.map(function(block){return _jsx(View,{style:[styles.unavailableHoursBlock,block,unavailableHoursColor?{backgroundColor:unavailableHoursColor}:undefined]});}),hours.map(function(_ref,index){var timeText=_ref.timeText,time=_ref.time;return _jsxs(React.Fragment,{children:[_jsx(Text,{style:[styles.timeLabel,{top:offset*index-6}],children:timeText},\"timeLabel\"+time),time===start?null:_jsx(View,{style:[styles.line,{top:offset*index,width:dimensionWidth-EVENT_DIFF}]},\"line\"+time),_jsx(View,{style:[styles.line,{top:offset*(index+0.5),width:dimensionWidth-EVENT_DIFF}]},\"lineHalf\"+time)]},time);}),_jsx(View,{style:styles.verticalLine})]});};export default React.memo(TimelineHours);","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/timeline/TimelineHours.js"],"names":["React","useCallback","useMemo","useRef","range","buildUnavailableHoursBlocks","HOUR_BLOCK_HEIGHT","buildTimeString","calcTimeByPosition","constants","dimensionWidth","screenWidth","EVENT_DIFF","TimelineHours","props","format24h","start","end","date","unavailableHours","unavailableHoursColor","styles","onBackgroundLongPress","onBackgroundLongPressOut","lastLongPressEventTime","offset","unavailableHoursBlocks","dayStart","dayEnd","hours","map","i","timeText","time","handleBackgroundPress","event","yPosition","nativeEvent","locationY","hour","minutes","current","timeString","handlePressOut","undefined","StyleSheet","absoluteFillObject","block","unavailableHoursBlock","backgroundColor","index","timeLabel","top","line","width","verticalLine","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef } from 'react';\nimport { View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport range from 'lodash/range';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from './Packer';\nimport { buildTimeString, calcTimeByPosition } from './helpers/presenter';\nimport constants from '../commons/constants';\nconst dimensionWidth = constants.screenWidth;\nconst EVENT_DIFF = 20;\nconst TimelineHours = (props) => {\n    const { format24h, start = 0, end = 24, date, unavailableHours, unavailableHoursColor, styles, onBackgroundLongPress, onBackgroundLongPressOut } = props;\n    const lastLongPressEventTime = useRef();\n    // const offset = this.calendarHeight / (end - start);\n    const offset = HOUR_BLOCK_HEIGHT;\n    const unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, { dayStart: start, dayEnd: end });\n    const hours = useMemo(() => {\n        return range(start, end + 1).map(i => {\n            let timeText;\n            if (i === start) {\n                timeText = '';\n            }\n            else if (i < 12) {\n                timeText = !format24h ? `${i} AM` : `${i}:00`;\n            }\n            else if (i === 12) {\n                timeText = !format24h ? `${i} PM` : `${i}:00`;\n            }\n            else if (i === 24) {\n                timeText = !format24h ? '12 AM' : '23:59';\n            }\n            else {\n                timeText = !format24h ? `${i - 12} PM` : `${i}:00`;\n            }\n            return { timeText, time: i };\n        });\n    }, [start, end, format24h]);\n    const handleBackgroundPress = useCallback(event => {\n        const yPosition = event.nativeEvent.locationY;\n        const { hour, minutes } = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT);\n        lastLongPressEventTime.current = { hour, minutes, date };\n        const timeString = buildTimeString(hour, minutes, date);\n        onBackgroundLongPress?.(timeString, lastLongPressEventTime.current);\n    }, [onBackgroundLongPress, date]);\n    const handlePressOut = useCallback(() => {\n        if (lastLongPressEventTime.current) {\n            const { hour, minutes, date } = lastLongPressEventTime.current;\n            const timeString = buildTimeString(hour, minutes, date);\n            onBackgroundLongPressOut?.(timeString, lastLongPressEventTime.current);\n            lastLongPressEventTime.current = undefined;\n        }\n    }, [onBackgroundLongPressOut, date]);\n    return (<>\n      <TouchableWithoutFeedback onLongPress={handleBackgroundPress} onPressOut={handlePressOut}>\n        <View style={StyleSheet.absoluteFillObject}/>\n      </TouchableWithoutFeedback>\n      {unavailableHoursBlocks.map(block => (<View style={[\n                styles.unavailableHoursBlock,\n                block,\n                unavailableHoursColor ? { backgroundColor: unavailableHoursColor } : undefined\n            ]}></View>))}\n\n      {hours.map(({ timeText, time }, index) => {\n            return (<React.Fragment key={time}>\n            <Text key={`timeLabel${time}`} style={[styles.timeLabel, { top: offset * index - 6 }]}>\n              {timeText}\n            </Text>\n            {time === start ? null : (<View key={`line${time}`} style={[styles.line, { top: offset * index, width: dimensionWidth - EVENT_DIFF }]}/>)}\n            {<View key={`lineHalf${time}`} style={[styles.line, { top: offset * (index + 0.5), width: dimensionWidth - EVENT_DIFF }]}/>}\n          </React.Fragment>);\n        })}\n      <View style={styles.verticalLine}/>\n    </>);\n};\nexport default React.memo(TimelineHours);\n"]},"metadata":{},"sourceType":"module"}