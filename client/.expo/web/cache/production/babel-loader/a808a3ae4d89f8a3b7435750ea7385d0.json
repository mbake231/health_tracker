{"ast":null,"code":"import{useCallback,useEffect}from'react';export default(function(props){var onChangeOffset=props.onChangeOffset,scrollOffset=props.scrollOffset,scrollViewRef=props.scrollViewRef;useEffect(function(){if(scrollOffset!==undefined){var _scrollViewRef$curren;scrollViewRef==null?void 0:(_scrollViewRef$curren=scrollViewRef.current)==null?void 0:_scrollViewRef$curren.scrollTo({y:scrollOffset,animated:false});}},[scrollOffset]);var onScrollEndDrag=useCallback(function(event){var _event$nativeEvent$ve;var offset=event.nativeEvent.contentOffset.y;var velocity=(_event$nativeEvent$ve=event.nativeEvent.velocity)==null?void 0:_event$nativeEvent$ve.y;if(velocity===0){onChangeOffset==null?void 0:onChangeOffset(offset);}},[]);var onMomentumScrollEnd=useCallback(function(event){onChangeOffset==null?void 0:onChangeOffset(event.nativeEvent.contentOffset.y);},[]);return{scrollEvents:{onScrollEndDrag:onScrollEndDrag,onMomentumScrollEnd:onMomentumScrollEnd}};});","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-calendars/src/timeline/useTimelineOffset.js"],"names":["useCallback","useEffect","props","onChangeOffset","scrollOffset","scrollViewRef","undefined","current","scrollTo","y","animated","onScrollEndDrag","event","offset","nativeEvent","contentOffset","velocity","onMomentumScrollEnd","scrollEvents"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,SAAtB,KAAuC,OAAvC,CACA,eAAe,SAACC,KAAD,CAAW,CACtB,GAAQC,CAAAA,cAAR,CAAwDD,KAAxD,CAAQC,cAAR,CAAwBC,YAAxB,CAAwDF,KAAxD,CAAwBE,YAAxB,CAAsCC,aAAtC,CAAwDH,KAAxD,CAAsCG,aAAtC,CACAJ,SAAS,CAAC,UAAM,CAGZ,GAAIG,YAAY,GAAKE,SAArB,CAAgC,2BAC5BD,aAAa,MAAb,+BAAAA,aAAa,CAAEE,OAAf,qCAAwBC,QAAxB,CAAiC,CAC7BC,CAAC,CAAEL,YAD0B,CAE7BM,QAAQ,CAAE,KAFmB,CAAjC,EAIH,CACJ,CATQ,CASN,CAACN,YAAD,CATM,CAAT,CAUA,GAAMO,CAAAA,eAAe,CAAGX,WAAW,CAAC,SAACY,KAAD,CAAW,2BAC3C,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACE,WAAN,CAAkBC,aAAlB,CAAgCN,CAA/C,CACA,GAAMO,CAAAA,QAAQ,wBAAGJ,KAAK,CAACE,WAAN,CAAkBE,QAArB,eAAG,sBAA4BP,CAA7C,CACA,GAAIO,QAAQ,GAAK,CAAjB,CAAoB,CAChBb,cAAc,MAAd,QAAAA,cAAc,CAAGU,MAAH,CAAd,CACH,CACJ,CANkC,CAMhC,EANgC,CAAnC,CAOA,GAAMI,CAAAA,mBAAmB,CAAGjB,WAAW,CAAC,SAACY,KAAD,CAAW,CAC/CT,cAAc,MAAd,QAAAA,cAAc,CAAGS,KAAK,CAACE,WAAN,CAAkBC,aAAlB,CAAgCN,CAAnC,CAAd,CACH,CAFsC,CAEpC,EAFoC,CAAvC,CAGA,MAAO,CACHS,YAAY,CAAE,CACVP,eAAe,CAAfA,eADU,CAEVM,mBAAmB,CAAnBA,mBAFU,CADX,CAAP,CAMH,CA5BD","sourcesContent":["import { useCallback, useEffect } from 'react';\nexport default (props) => {\n    const { onChangeOffset, scrollOffset, scrollViewRef } = props;\n    useEffect(() => {\n        // NOTE: The main reason for this feature is to sync the offset\n        // between all of the timelines in the TimelineList component\n        if (scrollOffset !== undefined) {\n            scrollViewRef?.current?.scrollTo({\n                y: scrollOffset,\n                animated: false\n            });\n        }\n    }, [scrollOffset]);\n    const onScrollEndDrag = useCallback((event) => {\n        const offset = event.nativeEvent.contentOffset.y;\n        const velocity = event.nativeEvent.velocity?.y;\n        if (velocity === 0) {\n            onChangeOffset?.(offset);\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback((event) => {\n        onChangeOffset?.(event.nativeEvent.contentOffset.y);\n    }, []);\n    return {\n        scrollEvents: {\n            onScrollEndDrag,\n            onMomentumScrollEnd\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}