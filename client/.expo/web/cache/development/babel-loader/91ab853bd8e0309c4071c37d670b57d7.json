{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport FirstPage from \"../pages/page1.jsx\";\nimport SecondPage from \"../pages/page2.jsx\";\nimport ThirdPage from \"../pages/page3.jsx\";\nimport CustomSidebarMenu from \"./CustomSidebarMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar NavigationDrawerStructure = function NavigationDrawerStructure(props) {\n  var toggleDrawer = function toggleDrawer() {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return _jsx(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: _jsx(TouchableOpacity, {\n      onPress: toggleDrawer,\n      children: _jsx(Image, {\n        source: {\n          uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'\n        },\n        style: {\n          width: 25,\n          height: 25,\n          marginLeft: 5\n        }\n      })\n    })\n  });\n};\n\nfunction firstScreenStack(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(Stack.Navigator, {\n    initialRouteName: \"FirstPage\",\n    children: _jsx(Stack.Screen, {\n      name: \"FirstPage\",\n      component: FirstPage,\n      options: {\n        title: 'First Page',\n        headerLeft: function headerLeft() {\n          return _jsx(NavigationDrawerStructure, {\n            navigationProps: navigation\n          });\n        },\n        headerStyle: {\n          backgroundColor: '#f4511e'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    })\n  });\n}\n\nfunction secondScreenStack(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"SecondPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return _jsx(NavigationDrawerStructure, {\n          navigationProps: navigation\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"SecondPage\",\n      component: SecondPage,\n      options: {\n        title: 'Second Page'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ThirdPage\",\n      component: ThirdPage,\n      options: {\n        title: 'Third Page'\n      }\n    })]\n  });\n}\n\nfunction NavBar() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      drawerContentOptions: {\n        activeTintColor: '#e91e63',\n        itemStyle: {\n          marginVertical: 5,\n          height: '100px'\n        }\n      },\n      drawerContent: function drawerContent(props) {\n        return _jsx(CustomSidebarMenu, _objectSpread({}, props));\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"FirstPage\",\n        options: {\n          drawerLabel: 'First page Option'\n        },\n        component: firstScreenStack\n      }), _jsx(Drawer.Screen, {\n        name: \"SecondPage\",\n        options: {\n          drawerLabel: 'Second page Option'\n        },\n        component: secondScreenStack\n      })]\n    })\n  });\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/components/NavBar.jsx"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","FirstPage","SecondPage","ThirdPage","CustomSidebarMenu","Stack","Drawer","NavigationDrawerStructure","props","toggleDrawer","navigationProps","flexDirection","uri","width","height","marginLeft","firstScreenStack","navigation","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","secondScreenStack","NavBar","activeTintColor","itemStyle","marginVertical","drawerLabel"],"mappings":"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","sourcesContent":["// Custom Navigation Drawer / Sidebar with Image and Icon in Menu Options\n// https://aboutreact.com/custom-navigation-drawer-sidebar-with-image-and-icon-in-menu-options/\n\nimport 'react-native-gesture-handler';\n\nimport * as React from 'react';\nimport { View, TouchableOpacity, Image } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport FirstPage from '../pages/page1.jsx';\nimport SecondPage from '../pages/page2.jsx';\nimport ThirdPage from '../pages/page3.jsx';\n\n// Import Custom Sidebar\nimport CustomSidebarMenu from './CustomSidebarMenu.js';\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst NavigationDrawerStructure = (props) => {\n  //Structure for the navigatin Drawer\n  const toggleDrawer = () => {\n    //Props to open/close the drawer\n    props.navigationProps.toggleDrawer();\n  };\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity onPress={toggleDrawer}>\n        {/*Donute Button Image */}\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png',\n          }}\n          style={{ width: 25, height: 25, marginLeft: 5 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nfunction firstScreenStack({ navigation }) {\n  return (\n    <Stack.Navigator initialRouteName=\"FirstPage\">\n      <Stack.Screen\n        name=\"FirstPage\"\n        component={FirstPage}\n        options={{\n          title: 'First Page', //Set Header Title\n          headerLeft: () => (\n            <NavigationDrawerStructure navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: '#f4511e', //Set Header color\n          },\n          headerTintColor: '#fff', //Set Header text color\n          headerTitleStyle: {\n            fontWeight: 'bold', //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction secondScreenStack({ navigation }) {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"SecondPage\"\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerStructure navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#f4511e', //Set Header color\n        },\n        headerTintColor: '#fff', //Set Header text color\n        headerTitleStyle: {\n          fontWeight: 'bold', //Set Header text style\n        },\n      }}>\n      <Stack.Screen\n        name=\"SecondPage\"\n        component={SecondPage}\n        options={{\n          title: 'Second Page', //Set Header Title\n        }}\n      />\n      <Stack.Screen\n        name=\"ThirdPage\"\n        component={ThirdPage}\n        options={{\n          title: 'Third Page', //Set Header Title\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction NavBar() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        drawerContentOptions={{\n          activeTintColor: '#e91e63',\n          itemStyle: { marginVertical: 5 , height:'100px'},\n        }}\n        drawerContent={(props) => <CustomSidebarMenu {...props} />}>\n        <Drawer.Screen\n          name=\"FirstPage\"\n          options={{ drawerLabel: 'First page Option' }}\n          component={firstScreenStack}\n        />\n        <Drawer.Screen\n          name=\"SecondPage\"\n          options={{ drawerLabel: 'Second page Option' }}\n          component={secondScreenStack}\n        />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}