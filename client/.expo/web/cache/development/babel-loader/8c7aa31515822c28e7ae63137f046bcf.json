{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from 'react';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport { ParticipantConversationPage } from 'twilio/lib/rest/conversations/v1/participantConversation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EatingCalendar(props) {\n  var _useState = useState('hi'),\n      _useState2 = _slicedToArray(_useState, 2),\n      drinkValue = _useState2[0],\n      setDrinkValue = _useState2[1];\n\n  function getDayData(d) {\n    var ctr = 0;\n\n    while (ctr < props.eating_data.length) {\n      if (props.eating_data[ctr].date === d.dateString) {\n        return props.eating_data[ctr].activity_data.alcoholDrinksHad;\n      }\n\n      ctr++;\n    }\n\n    return 'empty';\n  }\n\n  function updateDay(e, date) {\n    e.preventDefault();\n    console.log(drinkValue + ' ' + date);\n  }\n\n  function editDay(d) {\n    console.log(d);\n    props.setDrawerContent(_jsxs(\"form\", {\n      children: [_jsx(\"input\", {\n        type: \"text\",\n        name: \"alcoholValue\",\n        onChange: function onChange(e) {\n          setDrinkValue(e.target.value);\n        }\n      }), _jsx(\"button\", {\n        onClick: function onClick(e) {\n          updateDay(e, d.dateString);\n        },\n        children: \"Submit\"\n      })]\n    }));\n    props.toggleDrawer();\n  }\n\n  return _jsx(CalendarList, {\n    dayComponent: function dayComponent(_ref) {\n      var date = _ref.date,\n          state = _ref.state;\n      return _jsx(\"div\", {\n        onClick: function onClick() {\n          editDay(date);\n        },\n        style: {\n          textAlign: 'center'\n        },\n        children: getDayData(date)\n      });\n    },\n    theme: {\n      backgroundColor: '#ccc',\n      'stylesheet.calendar.main': {\n        dayContainer: {\n          borderBottomWidth: '2px',\n          borderBottomColor: 'black',\n          borderTopWidth: '2px',\n          borderTopColor: 'black',\n          borderLeftWidth: '1px',\n          borderLeftColor: 'black',\n          borderRightWidth: '1px',\n          borderRightColor: 'black',\n          flex: 1,\n          alignItems: 'center',\n          height: '60px'\n        }\n      }\n    },\n    onVisibleMonthsChange: function onVisibleMonthsChange(months) {\n      console.log('now these months are visible', months);\n    },\n    pastScrollRange: 3,\n    futureScrollRange: 2,\n    scrollEnabled: true,\n    showScrollIndicator: true\n  });\n}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/components/EatingCalendar.jsx"],"names":["React","Component","useState","Calendar","CalendarList","Agenda","ParticipantConversationPage","EatingCalendar","props","drinkValue","setDrinkValue","getDayData","d","ctr","eating_data","length","date","dateString","activity_data","alcoholDrinksHad","updateDay","e","preventDefault","console","log","editDay","setDrawerContent","target","value","toggleDrawer","state","textAlign","backgroundColor","dayContainer","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","borderLeftWidth","borderLeftColor","borderRightWidth","borderRightColor","flex","alignItems","height","months"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\nimport { ParticipantConversationPage } from 'twilio/lib/rest/conversations/v1/participantConversation';\n\n\n\nexport default function EatingCalendar(props) {\n\n  const [drinkValue, setDrinkValue] = useState('hi');\n\nfunction getDayData(d) {\n  var ctr = 0;\n  while (ctr<props.eating_data.length){\n    if(props.eating_data[ctr].date===d.dateString){\n      return props.eating_data[ctr].activity_data.alcoholDrinksHad;\n    }\n    ctr++;\n  }\n  return 'empty';\n}\n\nfunction updateDay(e,date){\n  e.preventDefault();\n  console.log(drinkValue+' '+date);\n}\n\nfunction editDay(d){\n  console.log(d);\n  props.setDrawerContent(<form>\n          <input type=\"text\" name=\"alcoholValue\" onChange={e => {setDrinkValue(e.target.value)}} />\n          <button onClick={(e)=>{updateDay(e,d.dateString)}}>Submit</button>\n          </form>\n    \n    );\n  props.toggleDrawer();\n}\n\n\n\n      return (\n        <CalendarList\n      \n        dayComponent={({date, state}) => {\n          return (\n           \n              <div onClick={() => {editDay(date)}} style={{textAlign: 'center'}}>{getDayData(date)}</div>\n           \n          );\n        }}\n\n  theme={{\n    backgroundColor: '#ccc',\n    'stylesheet.calendar.main': {\n      dayContainer: {\n        borderBottomWidth:'2px',\n        borderBottomColor:'black',\n        borderTopWidth:'2px',\n        borderTopColor:'black',\n        borderLeftWidth:'1px',\n        borderLeftColor:'black',\n        borderRightWidth:'1px',\n        borderRightColor:'black',\n        flex: 1,\n        alignItems: 'center',\n        height:'60px'\n      \n      }\n    }\n  }}\n\n       \n         // Callback which gets executed when visible months change in scroll view. Default = undefined\n   onVisibleMonthsChange={(months) => {console.log('now these months are visible', months);}}\n   // Max amount of months allowed to scroll to the past. Default = 50\n   pastScrollRange={3}\n   // Max amount of months allowed to scroll to the future. Default = 50\n   futureScrollRange={2}\n   // Enable or disable scrolling of calendar list\n   scrollEnabled={true}\n   // Enable or disable vertical scroll indicator. Default = false\n   showScrollIndicator={true}\n  \n />\n          )\n      }\n\n\n"]},"metadata":{},"sourceType":"module"}