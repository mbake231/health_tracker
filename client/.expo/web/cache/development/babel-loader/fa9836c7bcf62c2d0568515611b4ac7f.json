{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CollapsingParallax = function (_Component) {\n  _inherits(CollapsingParallax, _Component);\n\n  var _super = _createSuper(CollapsingParallax);\n\n  function CollapsingParallax() {\n    _classCallCheck(this, CollapsingParallax);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CollapsingParallax, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(RCTCollapsingParallax, _objectSpread({}, this.props));\n    }\n  }]);\n\n  return CollapsingParallax;\n}(Component);\n\nCollapsingParallax.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  parallaxMultiplier: PropTypes.number\n});\nvar RCTCollapsingParallax = requireNativeComponent('CTLCollapsingParallax', RCTCollapsingParallax);\nexport default CollapsingParallax;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-collapsing-toolbar/lib/CollapsingParallax.js"],"names":["React","Component","PropTypes","ViewPropTypes","requireNativeComponent","CollapsingParallax","props","propTypes","parallaxMultiplier","number","RCTCollapsingParallax"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;SAEEC,a;SACAC,sB;;;IAGIC,kB;;;;;;;;;;;;;WAMJ,kBAAS;AACP,aACE,KAAC,qBAAD,oBAA2B,KAAKC,KAAhC,EADF;AAGD;;;;EAV8BL,S;;AAA3BI,kB,CACGE,S,mCACFJ,a;AACHK,EAAAA,kBAAkB,EAAEN,SAAS,CAACO;;AAUlC,IAAMC,qBAAqB,GAAGN,sBAAsB,CAAC,uBAAD,EAA0BM,qBAA1B,CAApD;AAEA,eAAeL,kBAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  ViewPropTypes,\n  requireNativeComponent,\n} from 'react-native'\n\nclass CollapsingParallax extends Component {\n  static propTypes = {\n    ...ViewPropTypes,\n    parallaxMultiplier: PropTypes.number,\n  };\n\n  render() {\n    return (\n      <RCTCollapsingParallax {...this.props} />\n    )\n  }\n}\n\nconst RCTCollapsingParallax = requireNativeComponent('CTLCollapsingParallax', RCTCollapsingParallax)\n\nexport default CollapsingParallax\n"]},"metadata":{},"sourceType":"module"}