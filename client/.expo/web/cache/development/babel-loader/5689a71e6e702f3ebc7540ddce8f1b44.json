{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport axios from 'axios';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AlcoholCalendar(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      drinkValue = _useState2[0],\n      setDrinkValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  function getDayData(d) {\n    var ctr = 0;\n\n    while (ctr < props.alcohol_data.length) {\n      if (props.alcohol_data[ctr].date === d.dateString) {\n        return props.alcohol_data[ctr].activity_data.alcoholDrinksHad;\n      }\n\n      ctr++;\n    }\n\n    return 'empty';\n  }\n\n  var styles = StyleSheet.create({\n    centeredView: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 22\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: \"white\",\n      borderRadius: 20,\n      padding: 35,\n      alignItems: \"center\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n      elevation: 5\n    },\n    button: {\n      borderRadius: 20,\n      padding: 10,\n      elevation: 2\n    },\n    buttonOpen: {\n      backgroundColor: \"#F194FF\"\n    },\n    buttonClose: {\n      backgroundColor: \"#2196F3\"\n    },\n    textStyle: {\n      color: \"white\",\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    modalText: {\n      marginBottom: 15,\n      textAlign: \"center\"\n    }\n  });\n\n  function submitNewAlcoholData() {\n    console.log(drinkValue + ' ' + date);\n    var json = {\n      activity_type: \"alcohol\",\n      date: date,\n      activity_data: {\n        alcoholDrinksHad: drinkValue\n      }\n    };\n    console.log(JSON.stringify(json));\n    var url;\n    if (process.env.NODE_ENV == 'production') url = '';else url = 'http://localhost:3000';\n    axios.post(url + '/Activity/edit', json, {\n      withCredentials: true\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(setTimeout(function () {\n      props.updateData();\n    }, 500));\n    setModalVisible(false);\n  }\n\n  function handleClickDay(d) {\n    console.log(d.dateString);\n    setModalVisible(true);\n    setDate(d.dateString);\n  }\n\n  return _jsx(\"div\", {\n    children: \"hi\"\n  });\n}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/pages/page1.jsx"],"names":["React","useState","Calendar","CalendarList","Agenda","axios","Modal","AlcoholCalendar","props","drinkValue","setDrinkValue","modalVisible","setModalVisible","date","setDate","getDayData","d","ctr","alcohol_data","length","dateString","activity_data","alcoholDrinksHad","styles","StyleSheet","create","centeredView","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom","submitNewAlcoholData","console","log","json","activity_type","JSON","stringify","url","process","env","NODE_ENV","post","withCredentials","headers","then","setTimeout","updateData","handleClickDay"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\nimport axios from 'axios';\nimport { Alert, StyleSheet, Text, Pressable, View } from \"react-native\";\nimport Modal from \"react-native-modal\";\n\nexport default function AlcoholCalendar(props) {\n\n  const [drinkValue, setDrinkValue] = useState(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const [date, setDate] = useState(false);\n\n  function getDayData(d) {   \n  var ctr = 0;\n  while (ctr<props.alcohol_data.length){\n    if(props.alcohol_data[ctr].date===d.dateString){\n      return props.alcohol_data[ctr].activity_data.alcoholDrinksHad;\n    }\n    ctr++;\n  }\n  return 'empty';\n}\n\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    \n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\n\nfunction submitNewAlcoholData(){\n  console.log(drinkValue+' '+date);\n\n  var json = ({\n    activity_type : \"alcohol\",\n    date : date,\n    activity_data : {\n        alcoholDrinksHad : drinkValue\n    }\n    });\nconsole.log(JSON.stringify(json))\nvar url;\n        if(process.env.NODE_ENV=='production')\n            url='';\n        else\n            url='http://localhost:3000'\n  axios.post(url+'/Activity/edit', json,{ withCredentials: true },{\n        headers: {'Content-Type': 'application/json'}})\n      .then(\n        setTimeout(() => {\n          props.updateData()\n       }, 500)\n\n        \n        );\n        setModalVisible(false);\n  \n}\n\n\nfunction handleClickDay(d){\n  console.log(d.dateString)\n  setModalVisible(true);\n  setDate(d.dateString);\n}\n\n      return (\n        <div>\n        hi\n            \n            \n            </div>\n          )\n      }\n\n\n"]},"metadata":{},"sourceType":"module"}