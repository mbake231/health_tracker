{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport ModalTest from \"./ModalTest.jsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function FormattedDay(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      dayData = _useState2[0],\n      setDayData = _useState2[1];\n\n  function alcoholDayFormats(num) {\n    setDayData(dayData);\n    if (num == 0) return _jsx(\"div\", {\n      style: {\n        fontSize: '40px',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '0px'\n      },\n      children: \"\\uD83E\\uDD18\"\n    });\n    if (num > 0) return _jsx(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '15px'\n      },\n      children: num\n    });\n  }\n\n  function dietDayFormats(data) {\n    setDayData(dayData);\n    if (data == 'truetrue') return _jsx(\"div\", {\n      style: {\n        fontSize: '30px',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '7px'\n      },\n      children: \"\\u2705\"\n    });else return _jsx(\"div\", {\n      style: {\n        fontSize: '30px',\n        fontWeight: 'bold',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '7px'\n      },\n      children: \"\\u274C\"\n    });\n  }\n\n  function workoutDayFormats(data) {\n    setDayData(dayData);\n    if (data == 'strength') return _jsx(\"div\", {\n      style: {\n        fontSize: '30px',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '7px'\n      },\n      children: \"\\uD83C\\uDFCB\"\n    });else if (data == 'cardio') return _jsx(\"div\", {\n      style: {\n        fontSize: '30px',\n        fontWeight: 'bold',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '7px'\n      },\n      children: \"\\uD83C\\uDFC3\"\n    });else return _jsx(\"div\", {\n      style: {\n        fontSize: '30px',\n        fontWeight: 'bold',\n        backgroundColor: '#d6fdd6',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        margin: 'auto',\n        justifyContent: 'center',\n        paddingTop: '7px'\n      },\n      children: \"\\u274C\"\n    });\n  }\n\n  function routeToRightDayType(type, data) {\n    if (type === 'alcohol') return alcoholDayFormats(data);else if (type === 'diet') return dietDayFormats(data);else if (type === 'workout') return workoutDayFormats(data);\n  }\n\n  return _jsx(\"div\", {\n    style: {\n      height: '95%',\n      width: '100%'\n    },\n    children: routeToRightDayType(props.calendarType, props.dayData)\n  });\n}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/components/FormattedDay.jsx"],"names":["React","useState","useEffect","ModalTest","FormattedDay","props","dayData","setDayData","alcoholDayFormats","num","fontSize","backgroundColor","height","width","display","margin","justifyContent","paddingTop","fontWeight","dietDayFormats","data","workoutDayFormats","routeToRightDayType","type","calendarType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAG1C,kBAA8BJ,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AAGF,WAASC,iBAAT,CAA2BC,GAA3B,EAA+B;AAC3BF,IAAAA,UAAU,CAACD,OAAD,CAAV;AAEA,QAAGG,GAAG,IAAE,CAAR,EACA,OAAO;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAC,MAAX;AAAmBC,QAAAA,eAAe,EAAE,SAApC;AAA8CC,QAAAA,MAAM,EAAC,MAArD;AAA4DC,QAAAA,KAAK,EAAC,MAAlE;AAA2EC,QAAAA,OAAO,EAAE,MAApF;AAA4FC,QAAAA,MAAM,EAAE,MAApG;AAA4GC,QAAAA,cAAc,EAAE,QAA5H;AAAsIC,QAAAA,UAAU,EAAC;AAAjJ,OAAZ;AAAA;AAAA,MAAP;AAGD,QAAGR,GAAG,GAAC,CAAP,EACA,OAAO;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,UAAU,EAAC,MAAb;AAAoBP,QAAAA,eAAe,EAAE,SAArC;AAA+CC,QAAAA,MAAM,EAAC,MAAtD;AAA6DC,QAAAA,KAAK,EAAC,MAAnE;AAA4EC,QAAAA,OAAO,EAAE,MAArF;AAA6FC,QAAAA,MAAM,EAAE,MAArG;AAA6GC,QAAAA,cAAc,EAAE,QAA7H;AAAuIC,QAAAA,UAAU,EAAC;AAAlJ,OAAZ;AAAA,gBACNR;AADM,MAAP;AAKF;;AAED,WAASU,cAAT,CAAwBC,IAAxB,EAA6B;AAC3Bb,IAAAA,UAAU,CAACD,OAAD,CAAV;AACE,QAAGc,IAAI,IAAE,UAAT,EACA,OAAO;AAAK,MAAA,KAAK,EAAE;AAAEV,QAAAA,QAAQ,EAAC,MAAX;AAAmBC,QAAAA,eAAe,EAAE,SAApC;AAA8CC,QAAAA,MAAM,EAAC,MAArD;AAA4DC,QAAAA,KAAK,EAAC,MAAlE;AAA2EC,QAAAA,OAAO,EAAE,MAApF;AAA4FC,QAAAA,MAAM,EAAE,MAApG;AAA4GC,QAAAA,cAAc,EAAE,QAA5H;AAAsIC,QAAAA,UAAU,EAAC;AAAjJ,OAAZ;AAAA;AAAA,MAAP,CADA,KAKD,OAAO;AAAK,MAAA,KAAK,EAAE;AAAEP,QAAAA,QAAQ,EAAC,MAAX;AAAkBQ,QAAAA,UAAU,EAAC,MAA7B;AAAoCP,QAAAA,eAAe,EAAE,SAArD;AAA+DC,QAAAA,MAAM,EAAC,MAAtE;AAA6EC,QAAAA,KAAK,EAAC,MAAnF;AAA4FC,QAAAA,OAAO,EAAE,MAArG;AAA6GC,QAAAA,MAAM,EAAE,MAArH;AAA6HC,QAAAA,cAAc,EAAE,QAA7I;AAAuJC,QAAAA,UAAU,EAAC;AAAlK,OAAZ;AAAA;AAAA,MAAP;AAGF;;AAED,WAASI,iBAAT,CAA2BD,IAA3B,EAAgC;AAC9Bb,IAAAA,UAAU,CAACD,OAAD,CAAV;AACI,QAAGc,IAAI,IAAE,UAAT,EACA,OAAO;AAAK,MAAA,KAAK,EAAE;AAAEV,QAAAA,QAAQ,EAAC,MAAX;AAAmBC,QAAAA,eAAe,EAAE,SAApC;AAA8CC,QAAAA,MAAM,EAAC,MAArD;AAA4DC,QAAAA,KAAK,EAAC,MAAlE;AAA2EC,QAAAA,OAAO,EAAE,MAApF;AAA4FC,QAAAA,MAAM,EAAE,MAApG;AAA4GC,QAAAA,cAAc,EAAE,QAA5H;AAAsIC,QAAAA,UAAU,EAAC;AAAjJ,OAAZ;AAAA;AAAA,MAAP,CADA,KAII,IAAGG,IAAI,IAAE,QAAT,EACL,OAAO;AAAK,MAAA,KAAK,EAAE;AAAEV,QAAAA,QAAQ,EAAC,MAAX;AAAkBQ,QAAAA,UAAU,EAAC,MAA7B;AAAoCP,QAAAA,eAAe,EAAE,SAArD;AAA+DC,QAAAA,MAAM,EAAC,MAAtE;AAA6EC,QAAAA,KAAK,EAAC,MAAnF;AAA4FC,QAAAA,OAAO,EAAE,MAArG;AAA6GC,QAAAA,MAAM,EAAE,MAArH;AAA6HC,QAAAA,cAAc,EAAE,QAA7I;AAAuJC,QAAAA,UAAU,EAAC;AAAlK,OAAZ;AAAA;AAAA,MAAP,CADK,KAMN,OAAO;AAAK,MAAA,KAAK,EAAE;AAAEP,QAAAA,QAAQ,EAAC,MAAX;AAAkBQ,QAAAA,UAAU,EAAC,MAA7B;AAAoCP,QAAAA,eAAe,EAAE,SAArD;AAA+DC,QAAAA,MAAM,EAAC,MAAtE;AAA6EC,QAAAA,KAAK,EAAC,MAAnF;AAA4FC,QAAAA,OAAO,EAAE,MAArG;AAA6GC,QAAAA,MAAM,EAAE,MAArH;AAA6HC,QAAAA,cAAc,EAAE,QAA7I;AAAuJC,QAAAA,UAAU,EAAC;AAAlK,OAAZ;AAAA;AAAA,MAAP;AAGD;;AAEH,WAASK,mBAAT,CAA6BC,IAA7B,EAAmCH,IAAnC,EAAwC;AACpC,QAAGG,IAAI,KAAG,SAAV,EACI,OAAOf,iBAAiB,CAACY,IAAD,CAAxB,CADJ,KAGI,IAAGG,IAAI,KAAG,MAAV,EACA,OAAOJ,cAAc,CAACC,IAAD,CAArB,CADA,KAGC,IAAGG,IAAI,KAAG,SAAV,EACD,OAAOF,iBAAiB,CAACD,IAAD,CAAxB;AAEP;;AAEC,SACC;AAAK,IAAA,KAAK,EAAE;AAAGR,MAAAA,MAAM,EAAC,KAAV;AAAgBC,MAAAA,KAAK,EAAC;AAAtB,KAAZ;AAAA,cACGS,mBAAmB,CAACjB,KAAK,CAACmB,YAAP,EAAoBnB,KAAK,CAACC,OAA1B;AADtB,IADD;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport ModalTest from './ModalTest.jsx'\n\nexport default function FormattedDay(props) {\n\n\n  const [dayData, setDayData] = useState(\"\");\n \n\nfunction alcoholDayFormats(num){\n    setDayData(dayData);\n\n    if(num==0)\n    return <div style={{ fontSize:'40px', backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'0px' }}>\n    &#129304;\t\n   </div>\n   if(num>0)\n   return <div style={{ fontWeight:'bold',backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'15px'   }}>\n   {num}\n  </div>\n\n\n}\n\nfunction dietDayFormats(data){\n  setDayData(dayData);\n    if(data=='truetrue')\n    return <div style={{ fontSize:'30px', backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'7px' }}>\n    &#9989;\t\n   </div>\n   else\n   return <div style={{ fontSize:'30px',fontWeight:'bold',backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'7px'   }}>\n   &#10060;\n  </div>\n}\n\nfunction workoutDayFormats(data){\n  setDayData(dayData);\n      if(data=='strength')\n      return <div style={{ fontSize:'30px', backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'7px' }}>\n      &#127947;\t\n     </div>\n     else if(data=='cardio')\n     return <div style={{ fontSize:'30px',fontWeight:'bold',backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'7px'   }}>\n     &#127939;\n    </div>\n    \n    else\n    return <div style={{ fontSize:'30px',fontWeight:'bold',backgroundColor: '#d6fdd6',height:'100%',width:'100%' , display: 'flex', margin: 'auto', justifyContent: 'center', paddingTop:'7px'   }}>\n    &#10060;\n    </div>\n  }\n\nfunction routeToRightDayType(type, data){\n    if(type==='alcohol')\n        return alcoholDayFormats(data);\n\n   else if(type==='diet')\n        return dietDayFormats(data);\n\n    else if(type==='workout')\n        return workoutDayFormats(data);\n\n}\n\n  return (\n   <div style={{  height:'95%',width:'100%' }}>\n     {routeToRightDayType(props.calendarType,props.dayData)}\n      \n    </div>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}