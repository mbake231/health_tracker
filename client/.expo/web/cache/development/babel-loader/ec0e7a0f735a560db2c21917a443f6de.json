{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { Fragment } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport onecolor from 'onecolor';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar devMessages = {\n  usingLegacyProp: function usingLegacyProp(propName) {\n    return \"You're using the prop ('\" + propName + \"'), which is no longer valid as of the currently installed version of react-native-x-bar. Please either re-install react-native-x-bar with version 0.1.5 (which is stable & fully-functional), or adjust your usage to the updated react-native-x-bar library (which includes feature additions and can match all use cases of 0.1.5). For more information, please reach out to harrysolovay@gmail.com.\";\n  }\n};\n\nvar runDevMessages = function runDevMessages(potentials) {\n  potentials.forEach(function (potential) {\n    if (potential[0]) {\n      switch (potential[1]) {\n        case 'error':\n          throw new Error(potential[2]);\n\n        case 'warning':\n          console.warn(potential[2]);\n      }\n    }\n  });\n};\n\nvar styles = {\n  barContainer: {\n    flexDirection: 'row'\n  },\n  layoutItem: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  'absolute center': {\n    barContainer: {},\n    layoutItem: [{\n      flex: 1,\n      justifyContent: 'flex-start',\n      zIndex: 1\n    }, {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      zIndex: 0,\n      alignItems: 'center'\n    }, {\n      flex: 1,\n      justifyContent: 'flex-end',\n      zIndex: 1\n    }]\n  },\n  'space between': {\n    barContainer: {\n      justifyContent: 'space-between'\n    },\n    layoutItem: {}\n  },\n  'space around': {\n    barContainer: {\n      justifyContent: 'space-around'\n    },\n    layoutItem: {}\n  },\n  'space evenly': {\n    barContainer: {\n      justifyContent: 'space-evenly'\n    },\n    layoutItem: {}\n  },\n  'space equal': {\n    barContainer: {},\n    layoutItem: {\n      flex: 1\n    }\n  }\n};\n\nvar ViewOrTouchable = function ViewOrTouchable(props) {\n  return props.onPress || props.activeOpacity ? _jsx(TouchableOpacity, _objectSpread({}, props)) : _jsx(View, _objectSpread({}, props));\n};\n\nvar Fades = function Fades(_ref) {\n  var LinearGradient = _ref.LinearGradient,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 20 : _ref$width,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? '#fff' : _ref$color,\n      onPress = _ref.onPress,\n      activeOpacity = _ref.activeOpacity;\n  return _jsx(Fragment, {\n    children: ['left', 'right'].map(function (side, i) {\n      var _ref2;\n\n      return _createElement(ViewOrTouchable, {\n        onPress: onPress,\n        activeOpacity: activeOpacity,\n        style: (_ref2 = {\n          position: 'absolute',\n          top: 0,\n          bottom: 0\n        }, _defineProperty(_ref2, side, 0), _defineProperty(_ref2, \"zIndex\", 1), _defineProperty(_ref2, \"width\", width), _ref2),\n        key: i\n      }, _jsx(LinearGradient, {\n        start: [0, 1],\n        end: [1, 1],\n        colors: function (alphaOne, alphaZero) {\n          switch (i) {\n            case 0:\n              return [alphaOne, alphaZero];\n\n            case 1:\n              return [alphaZero, alphaOne];\n          }\n        }(color, onecolor(color).alpha(0).cssa()),\n        style: {\n          flex: 1,\n          alignSelf: 'stretch'\n        }\n      }));\n    })\n  });\n};\n\nvar Scroller = function Scroller(_ref3) {\n  var children = _ref3.children,\n      onPress = _ref3.onPress,\n      style = _ref3.style,\n      _ref3$overflow = _ref3.overflow,\n      effect = _ref3$overflow.effect,\n      effectConfig = _ref3$overflow.effectConfig,\n      _ref3$overflow$showIn = _ref3$overflow.showIndicator,\n      showIndicator = _ref3$overflow$showIn === void 0 ? false : _ref3$overflow$showIn,\n      activeOpacity = _ref3.activeOpacity;\n  return _jsxs(Fragment, {\n    children: [effect === 'fade' && _jsx(Fades, _objectSpread({}, _objectSpread(_objectSpread({\n      onPress: onPress\n    }, effectConfig), {}, {\n      activeOpacity: activeOpacity\n    }))), _jsx(FlatList, {\n      horizontal: true,\n      data: [children],\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(ViewOrTouchable, {\n          children: item,\n          onPress: onPress,\n          activeOpacity: activeOpacity\n        });\n      },\n      keyExtractor: function keyExtractor(item, i) {\n        return i.toString();\n      },\n      contentContainerStyle: style,\n      showsHorizontalScrollIndicator: showIndicator\n    })]\n  });\n};\n\nvar Slot = function Slot(props) {\n  return props.overflow ? _jsx(Scroller, _objectSpread({}, props)) : _jsx(ViewOrTouchable, _objectSpread({}, props));\n};\n\nvar LayoutItem = function LayoutItem(props) {\n  return _jsx(View, _objectSpread(_objectSpread({}, props), {}, {\n    style: [styles.layoutItem, props.style]\n  }));\n};\n\nvar BarContainer = function BarContainer(props) {\n  return _jsx(ViewOrTouchable, _objectSpread(_objectSpread({}, props), {}, {\n    style: [styles.barContainer, props.style]\n  }));\n};\n\nvar XBar = function XBar(_ref5) {\n  var layout = _ref5.layout,\n      slots = _ref5.slots,\n      groups = _ref5.groups,\n      style = _ref5.style,\n      onPress = _ref5.onPress,\n      _ref5$onPressPrioriti = _ref5.onPressPriorities,\n      onPressPriorities = _ref5$onPressPrioriti === void 0 ? ['slot', 'slots', 'container'] : _ref5$onPressPrioriti,\n      _ref5$activeOpacity = _ref5.activeOpacity,\n      activeOpacity = _ref5$activeOpacity === void 0 ? 1 : _ref5$activeOpacity,\n      left = _ref5.left,\n      center = _ref5.center,\n      centerTop = _ref5.centerTop,\n      centerBottom = _ref5.centerBottom,\n      right = _ref5.right,\n      containerStyle = _ref5.containerStyle,\n      slotStyle = _ref5.slotStyle,\n      leftSlotStyle = _ref5.leftSlotStyle,\n      centerSlotStyle = _ref5.centerSlotStyle,\n      centerTopStyle = _ref5.centerTopStyle,\n      centerBottomStyle = _ref5.centerBottomStyle,\n      rightSlotStyle = _ref5.rightSlotStyle,\n      containerOnPress = _ref5.containerOnPress,\n      leftSlotOnPress = _ref5.leftSlotOnPress,\n      centerSlotOnPress = _ref5.centerSlotOnPress,\n      centerTopSlotOnPress = _ref5.centerTopSlotOnPress,\n      centerBottomSlotOnPress = _ref5.centerBottomSlotOnPress,\n      rightSlotOnPress = _ref5.rightSlotOnPress;\n  runDevMessages(_toConsumableArray([[left, 'left'], [center, 'center'], [centerTop, 'centerTop'], [centerBottom, 'centerBottom'], [right, 'right'], [containerStyle, 'containerStyle'], [slotStyle, 'slotStyle'], [leftSlotStyle, 'leftSlotStyle'], [centerSlotStyle, 'centerSlotStyle'], [centerTopStyle, 'centerTopStyle'], [centerBottomStyle, 'centerBottomStyle'], [rightSlotStyle, 'rightSlotStyle'], [containerOnPress, 'containerOnPress'], [leftSlotOnPress, 'leftSlotOnPress'], [centerSlotOnPress, 'centerSlotOnPress'], [centerTopSlotOnPress, 'centerTopSlotOnPress'], [centerBottomSlotOnPress, 'centerBottomSlotOnPress'], [rightSlotOnPress, 'rightSlotOnPress']].map(function (prop) {\n    return [!!prop[0], 'warning', devMessages.usingLegacyProp(prop[1])];\n  })));\n\n  function mergeOnPresses() {\n    var _arguments = arguments;\n    return function () {\n      onPressPriorities.map(function (priority, i) {\n        switch (priority) {\n          case 'container':\n            {\n              return _arguments[0];\n              break;\n            }\n\n          case 'slots':\n            {\n              return _arguments[1];\n              break;\n            }\n\n          case 'slot':\n            {\n              return _arguments[2];\n              break;\n            }\n\n          default:\n            {\n              console.error('error in mergeOnPresses()');\n              break;\n            }\n        }\n      }).forEach(function (call) {\n        typeof call === 'function' && call();\n      });\n    };\n  }\n\n  var overflownSlotIndices = [];\n\n  slots = function () {\n    var containerOnPress = onPress;\n\n    if (slots.length == 2 && Array.isArray(slots[1])) {\n      var slotsOnPress = slots[0].onPress;\n      return slots[1].map(function (slot) {\n        return _objectSpread(_objectSpread({\n          activeOpacity: activeOpacity\n        }, slot), {}, {\n          onPress: mergeOnPresses(containerOnPress, slotsOnPress, slot.onPress),\n          style: _objectSpread(_objectSpread({}, StyleSheet.flatten(slots[0].style)), StyleSheet.flatten(slot.style))\n        });\n      });\n    } else {\n      return slots.map(function (slot) {\n        return _objectSpread(_objectSpread({\n          activeOpacity: activeOpacity\n        }, slot), {}, {\n          style: StyleSheet.flatten(slot.style),\n          onPress: mergeOnPresses(containerOnPress, null, slot.onPress)\n        });\n      });\n    }\n  }().map(function (slot, i) {\n    if (slot.overflow) {\n      overflownSlotIndices.push(i);\n    }\n\n    return _createElement(Slot, _objectSpread(_objectSpread({}, slot), {}, {\n      children: Array.isArray(slot.children) ? slot.children.map(function (child, j) {\n        return _jsx(View, {\n          children: child\n        }, j);\n      }) : slot.children,\n      key: i\n    }));\n  });\n\n  var layoutItems = [];\n\n  layoutItems.addItem = function (children, groupIndex, slotIndex) {\n    layoutItems.push(_jsx(LayoutItem, {\n      children: children,\n      style: [layout ? Array.isArray(styles[layout].layoutItem) ? styles[layout].layoutItem[groupIndex] : styles[layout].layoutItem : null, overflownSlotIndices.includes(groupIndex) ? {\n        flex: 1\n      } : null]\n    }, groupIndex));\n  };\n\n  if (groups) {\n    var is2D = false;\n    groups.forEach(function (group) {\n      if (Array.isArray(group)) {\n        is2D = true;\n      }\n    });\n    if (!is2D) groups = [groups];\n    var slotIndex = 0,\n        groupIndex = 0;\n    slots.forEach(function (slot, i) {\n      var newElement = [slotIndex];\n\n      for (var j = 0; j < groups.length; j++) {\n        if (groups[j].includes(slotIndex)) {\n          newElement = groups[j];\n          break;\n        }\n      }\n\n      if (slotIndex == i) {\n        layoutItems.addItem(newElement.map(function (slotIndex) {\n          return slots[slotIndex];\n        }), groupIndex, slotIndex);\n        slotIndex += newElement.length;\n        groupIndex++;\n      }\n    });\n  } else {\n    slots.forEach(layoutItems.addItem);\n  }\n\n  return _jsx(BarContainer, {\n    children: layoutItems,\n    style: [layout ? styles[layout].barContainer : null, style],\n    onPress: onPress,\n    activeOpacity: activeOpacity\n  });\n};\n\nvar stylePropType = PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.number]))]);\nXBar.propTypes = {\n  layout: PropTypes.oneOf(Object.keys(styles)),\n  slots: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    style: stylePropType,\n    onPress: PropTypes.func\n  }), PropTypes.arrayOf(PropTypes.shape({\n    component: PropTypes.node,\n    style: stylePropType,\n    onPress: PropTypes.func,\n    overflow: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      effect: PropTypes.string,\n      effectConfig: PropTypes.object\n    })])\n  }))])).isRequired,\n  group: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number))]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.number]))]),\n  onPress: PropTypes.func,\n  onPressPriorities: PropTypes.arrayOf(PropTypes.oneOf(['slot', 'slots', 'container']))\n};\nexport default XBar;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/node_modules/react-native-x-bar/src/index.js"],"names":["React","Fragment","onecolor","PropTypes","devMessages","usingLegacyProp","propName","runDevMessages","potentials","forEach","potential","Error","console","warn","styles","barContainer","flexDirection","layoutItem","justifyContent","alignItems","flex","zIndex","position","top","right","bottom","left","ViewOrTouchable","props","onPress","activeOpacity","Fades","LinearGradient","width","color","map","side","i","alphaOne","alphaZero","alpha","cssa","alignSelf","Scroller","children","style","overflow","effect","effectConfig","showIndicator","item","toString","Slot","LayoutItem","BarContainer","XBar","layout","slots","groups","onPressPriorities","center","centerTop","centerBottom","containerStyle","slotStyle","leftSlotStyle","centerSlotStyle","centerTopStyle","centerBottomStyle","rightSlotStyle","containerOnPress","leftSlotOnPress","centerSlotOnPress","centerTopSlotOnPress","centerBottomSlotOnPress","rightSlotOnPress","prop","mergeOnPresses","priority","arguments","error","call","overflownSlotIndices","length","Array","isArray","slotsOnPress","slot","StyleSheet","flatten","push","child","j","layoutItems","addItem","groupIndex","slotIndex","includes","is2D","group","newElement","stylePropType","oneOfType","object","number","arrayOf","propTypes","oneOf","Object","keys","shape","func","component","node","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport { TouchableOpacity, View, FlatList, StyleSheet } from 'react-native'\nimport onecolor from 'onecolor'\nimport PropTypes from 'prop-types'\n\n\n\n\n/*\n * Using PropType definitions doesn't include the logic needed\n * to properly advise on XBar misuse (including version differences).\n * The following (devMessages and runDevMessages) handles generating\n * errors and warnings based on whether the props meet necessary criteria.\n */\n\nconst devMessages = {\n  usingLegacyProp : (propName) => `You're using the prop ('${ propName }'), which is no longer valid as of the currently installed version of react-native-x-bar. Please either re-install react-native-x-bar with version 0.1.5 (which is stable & fully-functional), or adjust your usage to the updated react-native-x-bar library (which includes feature additions and can match all use cases of 0.1.5). For more information, please reach out to harrysolovay@gmail.com.`\n}\n\n/*\n * 'potentials' is an array of arrays, with the format:\n * [ show<Boolean>, type<String>, message<String> ]\n * valid values for type: 'error', 'warning'\n */\n\nconst runDevMessages = (potentials) => {\n  potentials.forEach((potential) => {\n    if(potential[0]) {\n      switch(potential[1]) {\n        case 'error' : throw new Error(potential[2])\n        case 'warning' : console.warn(potential[2])\n      }\n    }\n  })\n}\n\n\n\n\nconst styles = {\n\n  barContainer : { flexDirection : 'row' },\n  layoutItem : {\n    flexDirection : 'row',\n    justifyContent : 'center',\n    alignItems : 'center'\n  },\n\n  'absolute center' : {\n    barContainer : {},\n    layoutItem : [\n      {\n        flex : 1,\n        justifyContent : 'flex-start',\n        zIndex : 1\n      },\n      {\n        position : 'absolute',\n        top : 0, right : 0, bottom : 0, left : 0,\n        zIndex : 0,\n        alignItems : 'center'\n      },\n      {\n        flex : 1,\n        justifyContent : 'flex-end',\n        zIndex : 1\n      }\n    ]\n  },\n\n  'space between' : {\n    barContainer : { justifyContent : 'space-between' },\n    layoutItem : {}\n  },\n\n  'space around' : {\n    barContainer : { justifyContent : 'space-around' },\n    layoutItem : {}\n  },\n\n  'space evenly' : {\n    barContainer : { justifyContent : 'space-evenly' },\n    layoutItem : {}\n  },\n\n  'space equal' : {\n    barContainer : {},\n    layoutItem : { flex : 1 }\n  }\n\n}\n\n\n\n\nconst ViewOrTouchable = props => (\n  props.onPress || props.activeOpacity\n    ? (\n      <TouchableOpacity\n        { ...props }\n      />\n    ) : (\n      <View\n        { ...props }\n      />\n    )\n)\n\n\nconst Fades = ({\n  LinearGradient,\n  width=20,\n  color='#fff',\n  onPress,\n  activeOpacity\n}) => (\n  <Fragment>\n    {\n      ['left', 'right'].map((side, i) => (\n        <ViewOrTouchable\n          { ...{ onPress, activeOpacity } }\n          style={{\n            position : 'absolute',\n            top : 0, bottom : 0,\n            [side] : 0,\n            zIndex : 1,\n            width\n          }}\n          key={ i }\n        >\n          <LinearGradient\n            start={[ 0, 1 ]}\n            end={[ 1, 1 ]}\n            colors={((alphaOne, alphaZero) => {\n              switch(i) {\n                case 0 : return [ alphaOne, alphaZero ]\n                case 1 : return [ alphaZero, alphaOne ]\n              }\n            })(\n              color,\n              onecolor(color).alpha(0).cssa()\n            )}\n            style={{\n              flex : 1,\n              alignSelf : 'stretch'\n            }}\n          />\n        </ViewOrTouchable>\n      ))\n    }\n  </Fragment>\n)\n\n\nconst Scroller = ({\n  children,\n  onPress,\n  style,\n  overflow : {\n    effect,\n    effectConfig,\n    showIndicator=false\n  },\n  activeOpacity\n}) => (\n  <Fragment>\n    {\n      effect === 'fade' &&\n        <Fades { ...{ onPress, ...effectConfig, activeOpacity } } />\n    }\n    <FlatList\n      horizontal={ true }\n      data={[ children ]}\n      renderItem={({ item }) => (\n        <ViewOrTouchable\n          children={ item }\n          { ...{ onPress, activeOpacity } }\n        />\n      )}\n      keyExtractor={ (item, i) => i.toString() }\n      contentContainerStyle={ style }\n      showsHorizontalScrollIndicator={ showIndicator }\n    />\n  </Fragment>\n)\n\n\nconst Slot = props => (\n  props.overflow\n    ? <Scroller { ...props } />\n    : <ViewOrTouchable { ...props } />\n)\n\n\nconst LayoutItem = props => (\n  <View\n    { ...props }\n    style={[ styles.layoutItem, props.style ]}\n  />\n)\n\n\nconst BarContainer = props => (\n  <ViewOrTouchable\n    { ...props }\n    style={[ styles.barContainer, props.style ]}\n  />\n)\n\n\n\n\nconst XBar = ({\n\n  layout,\n  slots,\n  groups,\n  style,\n  onPress,\n  onPressPriorities=[ 'slot', 'slots', 'container' ],\n  activeOpacity=1,\n\n  // legacy props:\n\n  left,\n  center,\n  centerTop,\n  centerBottom,\n  right,\n\n  containerStyle,\n  slotStyle,\n  leftSlotStyle,\n  centerSlotStyle,\n  centerTopStyle,\n  centerBottomStyle,\n  rightSlotStyle,\n\n  containerOnPress,\n  leftSlotOnPress,\n  centerSlotOnPress,\n  centerTopSlotOnPress,\n  centerBottomSlotOnPress,\n  rightSlotOnPress\n\n}) => {\n\n  // check criteria and conditionally generate warnings and errors\n\n  runDevMessages([\n\n    ...[\n\n      [ left, 'left' ],\n      [ center, 'center' ],\n      [ centerTop, 'centerTop' ],\n      [ centerBottom, 'centerBottom' ],\n      [ right, 'right' ],\n\n      [ containerStyle, 'containerStyle' ],\n      [ slotStyle, 'slotStyle' ],\n      [ leftSlotStyle, 'leftSlotStyle' ],\n      [ centerSlotStyle, 'centerSlotStyle' ],\n      [ centerTopStyle, 'centerTopStyle' ],\n      [ centerBottomStyle, 'centerBottomStyle' ],\n      [ rightSlotStyle, 'rightSlotStyle' ],\n\n      [ containerOnPress, 'containerOnPress' ],\n      [ leftSlotOnPress, 'leftSlotOnPress' ],\n      [ centerSlotOnPress, 'centerSlotOnPress' ],\n      [ centerTopSlotOnPress, 'centerTopSlotOnPress' ],\n      [ centerBottomSlotOnPress, 'centerBottomSlotOnPress' ],\n      [ rightSlotOnPress, 'rightSlotOnPress' ]\n\n    ].map((prop) => ([\n      !!prop[0],\n      'warning',\n      devMessages.usingLegacyProp(prop[1])\n    ]))\n\n  ])\n\n  /* \n   * returns a function, which calls all onPress functons\n   * (container onPress, slots onPress, slot onPress),\n   * each of which is triggered in the order determined by\n   * the onPressPriorities prop, which defaults to\n   * [ 'slot', 'slots', 'container' ]\n   */\n\n  function mergeOnPresses() {\n\n    return () => {\n      onPressPriorities.map((priority, i) => {\n        switch(priority) {\n          case 'container' : {\n            return arguments[0]\n            break\n          }\n          case 'slots' : {\n            return arguments[1]\n            break\n          }\n          case 'slot' : {\n            return arguments[2]\n            break\n          }\n          default : {\n            console.error('error in mergeOnPresses()')\n            break\n          }\n        }\n      }).forEach((call) => {\n        typeof call === 'function' && call()\n      })\n    }\n\n  }\n\n  /*\n   * Track which slots are going to be overflown so that\n   * style { flex : 1 } can be added to the parent LayoutItem.\n   * This ensures that the overflown slot will take up available\n   * space without pushing adjacent slots out of the container bounds\n   */\n\n  let overflownSlotIndices = []\n  \n  slots = (() => {\n\n    // bring container onPress into scope\n    const containerOnPress = onPress\n\n    // if slots prop includes an all slots config\n    if(slots.length == 2 && Array.isArray(slots[1]) ) {\n\n      // bring the config's onPress into scope\n      const slotsOnPress = slots[0].onPress\n\n      /*\n       * map each slot onto itself with its destructured props,\n       * along with the merged styles and onPress methods\n       */\n\n      return slots[1].map(slot => ({\n\n        activeOpacity,\n        ...slot,\n\n        onPress : mergeOnPresses(\n          containerOnPress,\n          slotsOnPress,\n          slot.onPress\n        ),\n\n        style : {\n          ...StyleSheet.flatten(slots[0].style),\n          ...StyleSheet.flatten(slot.style)\n        },\n\n      }))\n\n    } else {\n\n      // same mapping as above, but without the all slots config\n\n      return slots.map(slot => ({\n\n        activeOpacity,\n        ...slot,\n\n        style : StyleSheet.flatten(slot.style),\n\n        onPress : mergeOnPresses(\n          containerOnPress,\n          null,\n          slot.onPress\n        )\n\n      }))\n\n    }\n\n  })().map((slot, i) => {\n\n    /* \n     * if slot contains the overflow prop, push the index to\n     * overflownSlotIndices for later use in applying { flex : 1 }\n     * to LayoutItems housing overflown slots\n     */\n\n    if(slot.overflow) {\n      overflownSlotIndices.push(i)\n    }\n\n    /* \n     * return array of type Slot,\n     * initialized with the slots config that got mapped above\n     */\n\n    return (\n      <Slot\n        { ...slot }\n        children={\n          Array.isArray(slot.children)\n            ? slot.children.map((child, j) => (\n              <View\n                children={ child }\n                key={ j }\n              />\n            ))\n            : slot.children\n        }\n        key={ i }\n      />\n    )\n\n  })\n\n  /*\n   * initialize mutable array \"layoutItems\"\n   * and add a method to it, \"addItem\", which takes in children (the slot(s))\n   * of the (to-be-created) LayoutItem, groupIndex (will be the same as slotIndex\n   * if groups prop is undefined), and slotIndex (the index within slots of the\n   * slot passed in as the \"children\" argument)\n   */\n\n  let\n    layoutItems = []\n    layoutItems.addItem = (children, groupIndex, slotIndex) => {\n      layoutItems.push(\n        <LayoutItem\n          children={ children }\n          style={[\n            layout\n              ? Array.isArray(styles[layout].layoutItem)\n                ? styles[layout].layoutItem[groupIndex]\n                : styles[layout].layoutItem\n              : null,\n            overflownSlotIndices.includes(groupIndex)\n              ? { flex : 1 } : null\n          ]}\n          key={ groupIndex }\n        />\n      )\n    }\n\n  if(groups) { // if we need to group slots into a given LayoutItem\n\n    /*\n     * if entered only 1 group, no need for the embedded array –\n     * can simply reassign self into a new array\n     */\n    let is2D = false\n    groups.forEach((group) => {\n      if(Array.isArray(group)) {\n        is2D = true\n      }\n    })\n    if(!is2D) groups = [groups]\n\n    // track the current slot and group\n    let slotIndex = 0, groupIndex = 0\n\n    slots.forEach((slot, i) => {\n\n      // defaults to new array with the slotIndex as the sole element\n      let newElement = [slotIndex]\n\n      /*\n       * if slotIndex is contained within a group, we want\n       * to override newElement with the given group\n       */\n\n      for(let j = 0; j < groups.length; j++) {\n        if(groups[j].includes(slotIndex)) {\n          newElement = groups[j]\n          break\n        }\n      }\n\n      if(slotIndex == i) { // check this to avoid pushing same newElement twice\n\n        // add the new Item\n        layoutItems.addItem(\n          newElement.map(slotIndex => slots[slotIndex]),\n          groupIndex,\n          slotIndex\n        )\n\n        // increment the counters\n        slotIndex += newElement.length\n        groupIndex ++\n\n      }\n\n    })\n\n  } else {\n\n    // so much simpler without groups\n    slots.forEach(layoutItems.addItem)\n\n  }\n\n  /*\n   * return the bar with layoutItems as the children –\n   * onPress, doesn't override slot(s) onPress handlers,\n   * even when slot is overflown\n   */\n\n  return (\n    <BarContainer\n      children={ layoutItems }\n      style={[\n        layout\n          ? styles[layout].barContainer\n          : null,\n        style\n      ]}\n      { ...{ onPress, activeOpacity } }\n    />\n  )\n\n}\n\n\n\n\nconst stylePropType = PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.number,\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number\n    ])\n  )\n])\n\nXBar.propTypes = {\n  layout : PropTypes.oneOf(Object.keys(styles)),\n  slots : PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.shape({\n        style : stylePropType,\n        onPress : PropTypes.func\n      }),\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          component : PropTypes.node,\n          style : stylePropType,\n          onPress : PropTypes.func,\n          overflow : PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.shape({\n              effect : PropTypes.string,\n              effectConfig : PropTypes.object\n            })\n          ])\n        })\n      )\n    ])\n  ).isRequired,\n  group : PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.number\n    ),\n    PropTypes.arrayOf(\n      PropTypes.arrayOf(\n        PropTypes.number\n      )\n    )\n  ]),\n  style : PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.number\n      ])\n    )\n  ]),\n  onPress : PropTypes.func,\n  onPressPriorities : PropTypes.arrayOf(\n    PropTypes.oneOf([ 'slot', 'slots', 'container' ])\n  )\n}\n\nexport default XBar\n"]},"metadata":{},"sourceType":"module"}