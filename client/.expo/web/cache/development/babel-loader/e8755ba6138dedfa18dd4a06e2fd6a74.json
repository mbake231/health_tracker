{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Feed(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Feed Screen\"\n    }), _jsx(Button, {\n      title: \"Open drawer\",\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      }\n    }), _jsx(Button, {\n      title: \"Toggle drawer\",\n      onPress: function onPress() {\n        return navigation.toggleDrawer();\n      }\n    })]\n  });\n}\n\nfunction Notifications() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Notifications Screen\"\n    })\n  });\n}\n\nfunction CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Close drawer\",\n      onPress: function onPress() {\n        return props.navigation.closeDrawer();\n      }\n    }), _jsx(DrawerItem, {\n      label: \"Toggle drawer\",\n      onPress: function onPress() {\n        return props.navigation.toggleDrawer();\n      }\n    })]\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Feed\",\n      component: Feed\n    }), _jsx(Drawer.Screen, {\n      name: \"Notifications\",\n      component: Notifications\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(MyDrawer, {})\n  });\n}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/components/GlobalNav.jsx"],"names":["React","NavigationContainer","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Feed","navigation","flex","justifyContent","alignItems","openDrawer","toggleDrawer","Notifications","CustomDrawerContent","props","closeDrawer","Drawer","MyDrawer","App"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,cAHF,EAIEC,UAJF,QAKO,0BALP;;;;AAOA,SAASC,IAAT,OAA8B;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC5B,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE;AAAA,eAAMH,UAAU,CAACI,UAAX,EAAN;AAAA;AAArC,MAFF,EAGE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA8B,MAAA,OAAO,EAAE;AAAA,eAAMJ,UAAU,CAACK,YAAX,EAAN;AAAA;AAAvC,MAHF;AAAA,IADF;AAOD;;AAED,SAASC,aAAT,GAAyB;AACvB,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADF;AAKD;;AAED,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,SACE,MAAC,uBAAD,kCAA6BA,KAA7B;AAAA,eACE,KAAC,cAAD,oBAAoBA,KAApB,EADF,EAEE,KAAC,UAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMA,KAAK,CAACR,UAAN,CAAiBS,WAAjB,EAAN;AAAA;AAFX,MAFF,EAME,KAAC,UAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMD,KAAK,CAACR,UAAN,CAAiBK,YAAjB,EAAN;AAAA;AAFX,MANF;AAAA,KADF;AAaD;;AAED,IAAMK,MAAM,GAAGf,qBAAqB,EAApC;;AAEA,SAASgB,QAAT,GAAoB;AAClB,SACE,MAAC,MAAD,CAAQ,SAAR;AACE,IAAA,uBAAuB,MADzB;AAEE,IAAA,aAAa,EAAE,uBAACH,KAAD;AAAA,aAAW,KAAC,mBAAD,oBAAyBA,KAAzB,EAAX;AAAA,KAFjB;AAAA,eAIE,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,SAAS,EAAET;AAAtC,MAJF,EAKE,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,eAApB;AAAoC,MAAA,SAAS,EAAEO;AAA/C,MALF;AAAA,IADF;AASD;;AAED,eAAe,SAASM,GAAT,GAAe;AAC5B,SACE,KAAC,mBAAD;AAAA,cACE,KAAC,QAAD;AADF,IADF;AAKD","sourcesContent":["import * as React from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\n\nfunction Feed({ navigation }) {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Feed Screen</Text>\n      <Button title=\"Open drawer\" onPress={() => navigation.openDrawer()} />\n      <Button title=\"Toggle drawer\" onPress={() => navigation.toggleDrawer()} />\n    </View>\n  );\n}\n\nfunction Notifications() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Notifications Screen</Text>\n    </View>\n  );\n}\n\nfunction CustomDrawerContent(props) {\n  return (\n    <DrawerContentScrollView {...props}>\n      <DrawerItemList {...props} />\n      <DrawerItem\n        label=\"Close drawer\"\n        onPress={() => props.navigation.closeDrawer()}\n      />\n      <DrawerItem\n        label=\"Toggle drawer\"\n        onPress={() => props.navigation.toggleDrawer()}\n      />\n    </DrawerContentScrollView>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return (\n    <Drawer.Navigator\n      useLegacyImplementation\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\n    >\n      <Drawer.Screen name=\"Feed\" component={Feed} />\n      <Drawer.Screen name=\"Notifications\" component={Notifications} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyDrawer />\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}