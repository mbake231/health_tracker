{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CalModals() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      drinkValue = _useState2[0],\n      setDrinkValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  function getModalQuestions(calType) {\n    if (calType === 'alcohol') {\n      return _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsxs(\"form\", {\n          onChange: function onChange(e) {\n            return setDrinkValue(e.target.value);\n          },\n          children: [_jsx(\"div\", {\n            children: \"Number of drinks\"\n          }), _jsx(\"input\", {\n            type: \"text\",\n            value: drinkValue,\n            onChange: function onChange(e) {\n              return setDrinkValue(e.target.value);\n            }\n          })]\n        }), _jsx(Pressable, {\n          style: [styles.button, styles.buttonClose],\n          onPress: function onPress() {\n            return submitNewAlcoholData();\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"Save\"\n          })\n        })]\n      });\n    } else if (calType === 'diet') {} else if (calType === 'workout') {}\n  }\n\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    onBackdropPress: function onBackdropPress() {\n      setModalVisible(!modalVisible);\n    },\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    },\n    children: _jsx(View, {\n      style: styles.centeredView\n    })\n  });\n}","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/components/CalModals.jsx"],"names":["React","useState","axios","Modal","CalModals","drinkValue","setDrinkValue","modalVisible","setModalVisible","date","setDate","getModalQuestions","calType","styles","modalView","e","target","value","button","buttonClose","submitNewAlcoholData","textStyle","Alert","alert","centeredView"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;;AACA,eAAe,SAASC,SAAT,GAAqB;AAElC,kBAAoCH,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwCL,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOM,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAwBP,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEA,WAASC,iBAAT,CAA2BC,OAA3B,EAAmC;AACjC,QAAGA,OAAO,KAAG,SAAb,EAAuB;AACnB,aAAO,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACP;AAAM,UAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,mBAAIT,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,WAAjB;AAAA,qBACE;AAAA;AAAA,YADF,EAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEZ,UAA1B;AAAsC,YAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,qBAAIT,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA;AAAjD,YAFF;AAAA,UADO,EAKP,KAAC,SAAD;AACE,UAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACM,WAAvB,CADT;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMC,oBAAoB,EAA1B;AAAA,WAFX;AAAA,oBAIE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEP,MAAM,CAACQ,SAApB;AAAA;AAAA;AAJF,UALO;AAAA,QAAP;AAaH,KAdD,MAeK,IAAGT,OAAO,KAAG,MAAb,EAAoB,CAGxB,CAHI,MAIA,IAAGA,OAAO,KAAG,SAAb,EAAuB,CAG3B;AAIF;;AAIG,SACK,KAAC,KAAD;AACH,IAAA,aAAa,EAAC,OADX;AAEH,IAAA,eAAe,EAAE,2BAAM;AAAEJ,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AAAgC,KAFtD;AAGH,IAAA,WAAW,EAAE,IAHV;AAIH,IAAA,OAAO,EAAEA,YAJN;AAKH,IAAA,cAAc,EAAE,0BAAM;AACpBe,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACAf,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KARE;AAAA,cAWH,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,MAAM,CAACW;AAApB;AAXG,IADL;AAkBH","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Alert, StyleSheet, Text, Pressable, View } from \"react-native\";\nimport Modal from \"react-native-modal\";\nexport default function CalModals() {\n\n  const [drinkValue, setDrinkValue] = useState(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const [date, setDate] = useState(false);\n\n  function getModalQuestions(calType){\n    if(calType==='alcohol'){\n        return <View style={styles.modalView}>\n        <form onChange={e => setDrinkValue(e.target.value)}>\n          <div>Number of drinks</div>\n          <input type=\"text\" value={drinkValue} onChange={e => setDrinkValue(e.target.value)} />\n        </form>\n        <Pressable\n          style={[styles.button, styles.buttonClose]}\n          onPress={() => submitNewAlcoholData()}\n        >\n          <Text style={styles.textStyle}>Save</Text>\n        </Pressable>\n      </View>\n\n    }\n    else if(calType==='diet'){\n\n\n    }\n    else if(calType==='workout'){\n\n\n    }\n\n\n\n  }\n\n\n      // NOTE: You also need to provide styles, see https://github.com/negomi/react-burger-menu#styling\n      return (\n           <Modal\n        animationType=\"slide\"\n        onBackdropPress={() => { setModalVisible(!modalVisible) }}\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n\n      >\n        <View style={styles.centeredView}>\n          \n        </View>\n      </Modal>\n      );\n    \n  }\n\n"]},"metadata":{},"sourceType":"module"}