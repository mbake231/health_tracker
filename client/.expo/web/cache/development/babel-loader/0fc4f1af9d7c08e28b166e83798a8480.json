{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var API = function (_Component) {\n  _inherits(API, _Component);\n\n  var _super = _createSuper(API);\n\n  function API() {\n    _classCallCheck(this, API);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(API, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(\"div\", {\n        children: [\"home\", _jsx(\"div\", {\n          heigh: \"500px\",\n          children: _jsx(CalendarList, {\n            current: '2012-03-01',\n            style: [{\n              height: 500\n            }],\n            onVisibleMonthsChange: function onVisibleMonthsChange(months) {\n              console.log('now these months are visible', months);\n            },\n            pastScrollRange: 1,\n            futureScrollRange: 2,\n            scrollEnabled: true,\n            showScrollIndicator: true\n          })\n        })]\n      });\n    }\n  }]);\n\n  return API;\n}(Component);\nexport default API;","map":{"version":3,"sources":["/Users/mikebaker/health_tracker/client/containers/Home.jsx"],"names":["React","Component","axios","Calendar","CalendarList","Agenda","API","height","months","console","log"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,MAAhC,QAA6C,wBAA7C;;;AAIA,WAAaC,GAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAIE,6BAAoB,CAGnB;AAPH;AAAA;AAAA,WAUE,kBAAS;AACP,aAAQ;AAAA,2BAEN;AAAK,UAAA,KAAK,EAAC,OAAX;AAAA,oBACA,KAAC,YAAD;AACA,YAAA,OAAO,EAAE,YADT;AAEC,YAAA,KAAK,EAAE,CAAE;AAACC,cAAAA,MAAM,EAAE;AAAT,aAAF,CAFR;AAIJ,YAAA,qBAAqB,EAAE,+BAACC,MAAD,EAAY;AAACC,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,MAA5C;AAAqD,aAJrF;AAMJ,YAAA,eAAe,EAAE,CANb;AAQJ,YAAA,iBAAiB,EAAE,CARf;AAUJ,YAAA,aAAa,EAAE,IAVX;AAYJ,YAAA,mBAAmB,EAAE;AAZjB;AADA,UAFM;AAAA,QAAR;AAqBD;AAhCH;;AAAA;AAAA,EAAyBP,SAAzB;AAkCA,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\n\n\n\nexport class API extends Component {\n\n\n\n  componentDidMount() {\n\n      \n  }\n\n\n  render() {\n    return (<div>\n      home\n      <div heigh='500px'>\n      <CalendarList\n      current={'2012-03-01'}\n       style={[ {height: 500}]}\n        // Callback which gets executed when visible months change in scroll view. Default = undefined\n  onVisibleMonthsChange={(months) => {console.log('now these months are visible', months);}}\n  // Max amount of months allowed to scroll to the past. Default = 50\n  pastScrollRange={1}\n  // Max amount of months allowed to scroll to the future. Default = 50\n  futureScrollRange={2}\n  // Enable or disable scrolling of calendar list\n  scrollEnabled={true}\n  // Enable or disable vertical scroll indicator. Default = false\n  showScrollIndicator={true}\n \n/></div>\n    </div>\n\n    );\n  }\n}\nexport default API"]},"metadata":{},"sourceType":"module"}